{
	"swagger": "2.0",
	"basePath": "/api/notification/1",
	"consumes": [
		"application/json"
	],
	"produces": [
		"application/json"
	],
	"schemes": [
		"https"
	],
	"info": {
		"title": "Paul's Notification Service Spec",
		"description": "Paul's Notification Service Spec (specification scratch-pad)",
		"version": "1"
	},
	"paths": {
		"/reminders": {
			"post": {
				"summary": "Receive a reminder",
				"description": "Receive a reminder",
				"operationId": "postReminder",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Reminder"
						}
					}
				],
				"responses": {
					"202": {
						"description": "Accepted"
					},
					"400": {
						"$ref": "#/responses/400"
					},
					"401": {
						"$ref": "#/responses/401"
					},
					"403": {
						"$ref": "#/responses/403"
					},
					"409": {
						"$ref": "#/responses/409"
					}
				},
				"tags": [
					"Reminders"
				]
			}
		}
	},
	"definitions": {
		"Reminder": {
			"description": "A reminder",
			"properties": {
				"id": {
					"description": "Reminder identifier",
					"type": "string"
				},
				"at": {
					"description": "UTC Time this reminder was triggered",
					"type": "string",
					"format": "date-time"
				},
				"namespace": {
					"description": "Reminder namespace",
					"type": "string"
				},
				"version": {
					"description": "Reminder version",
					"type": "string"
				},
				"payload": {
					"description": "The Base64 encoded message payload of the reminder",
					"type": "string"
				},
				"job": {
					"properties": {
						"id": {
							"description": "Job identifier",
							"type": "string"
						},
						"jobName": {
							"description": "A correlation identifier for this job",
							"type": "string"
						},
						"trigger": {
							"type": "object",
							"properties": {
								"startTime": {
									"type": "string",
									"format": "date-time"
								},
								"endTime": {
									"type": "string",
									"format": "date-time"
								},
								"cron": {
									"type": "string"
								},
								"timezone": {
									"type": "string"
								}
							},
							"required": [
								"startTime"
							]
						}
					},
					"required": [
						"id",
						"trigger"
					]
				}
			},
			"required": [
				"id",
				"at",
				"namespace",
				"version",
				"payload",
				"job"
			]
		},
		"Pagination(Reminder)": {
			"properties": {
				"count": {
					"description": "The number of items in this page of results (the number of items in the data array)",
					"format": "int32",
					"type": "integer"
				},
				"data": {
					"description": "An array that contains this page of resources",
					"items": {
						"$ref": "#/definitions/Reminder"
					},
					"type": "array"
				},
				"links": {
					"$ref": "#/definitions/PaginationLinks"
				},
				"total": {
					"description": "The total number of items in the result set",
					"format": "int32",
					"type": "integer"
				}
			},
			"required": [
				"count",
				"data",
				"total",
				"links"
			]
		},
		"PaginationLinks": {
			"properties": {
				"next": {
					"description": "A link to the next page of results",
					"type": "string"
				},
				"previous": {
					"description": "A link to the previous page of results",
					"type": "string"
				},
				"self": {
					"description": "A link to this page of results",
					"type": "string"
				}
			},
			"required": [
				"self"
			]
		},
		"BadRequestResponse": {
			"properties": {
				"code": {
					"description": "HTTP status code",
					"format": "int32",
					"type": "integer",
					"enum": [
						400
					]
				},
				"subcode": {
					"description": "An application-specific response sub-status",
					"type": "string"
				},
				"message": {
					"description": "A detailed description of the response or error",
					"type": "string"
				},
				"reason": {
					"description": "A description of the response code",
					"enum": [
						"Bad Request"
					],
					"type": "string"
				}
			},
			"required": [
				"code",
				"subcode",
				"reason",
				"message"
			]
		},
		"UnauthorizedResponse": {
			"properties": {
				"code": {
					"description": "HTTP status code",
					"format": "int32",
					"type": "integer",
					"enum": [
						401
					]
				},
				"subcode": {
					"description": "An application-specific response sub-status",
					"type": "string"
				},
				"message": {
					"description": "A detailed description of the response or error",
					"type": "string"
				},
				"reason": {
					"description": "A description of the response code",
					"enum": [
						"Unauthorized"
					],
					"type": "string"
				}
			},
			"required": [
				"code",
				"subcode",
				"reason",
				"message"
			]
		},
		"ForbiddenResponse": {
			"properties": {
				"code": {
					"description": "HTTP status code",
					"format": "int32",
					"type": "integer",
					"enum": [
						403
					]
				},
				"subcode": {
					"description": "An application-specific response sub-status",
					"type": "string"
				},
				"message": {
					"description": "A detailed description of the response or error",
					"type": "string"
				},
				"reason": {
					"description": "A description of the response code",
					"enum": [
						"Forbidden"
					],
					"type": "string"
				}
			},
			"required": [
				"code",
				"subcode",
				"reason",
				"message"
			]
		},
		"NotFoundResponse": {
			"properties": {
				"code": {
					"description": "HTTP status code",
					"format": "int32",
					"type": "integer",
					"enum": [
						404
					]
				},
				"subcode": {
					"description": "An application-specific response sub-status",
					"type": "string"
				},
				"message": {
					"description": "A detailed description of the response or error",
					"type": "string"
				},
				"reason": {
					"description": "A description of the response code",
					"enum": [
						"Not Found"
					],
					"type": "string"
				}
			},
			"required": [
				"code",
				"subcode",
				"reason",
				"message"
			]
		},
		"ConflictResponse": {
			"properties": {
				"code": {
					"description": "HTTP status code",
					"format": "int32",
					"type": "integer",
					"enum": [
						409
					]
				},
				"subcode": {
					"description": "An application-specific response sub-status",
					"type": "string"
				},
				"message": {
					"description": "A detailed description of the response or error",
					"type": "string"
				},
				"reason": {
					"description": "A description of the response status",
					"enum": [
						"Conflict"
					],
					"type": "string"
				}
			},
			"required": [
				"code",
				"subcode",
				"reason",
				"message"
			]
		}
	},
	"parameters": {
		"query-after": {
			"description": "After this time or sequenced item identifier (exclusive)",
			"in": "query",
			"name": "after",
			"required": false,
			"type": "string"
		},
		"query-before": {
			"description": "Before this time or sequenced item identifier (exclusive)",
			"in": "query",
			"name": "before",
			"required": false,
			"type": "string"
		},
		"query-from": {
			"description": "After this time or sequenced item identifier (inclusive)",
			"in": "query",
			"name": "from",
			"required": false,
			"type": "string"
		},
		"query-limit": {
			"default": 100,
			"description": "Maximum result size to return",
			"in": "query",
			"maximum": 1000,
			"name": "limit",
			"required": false,
			"type": "integer"
		},
		"query-offset": {
			"default": 0,
			"description": "Skip this many results before returning the result set",
			"in": "query",
			"name": "offset",
			"required": false,
			"type": "integer"
		},
		"query-to": {
			"description": "Before this time or sequenced item identifier (inclusive)",
			"in": "query",
			"name": "to",
			"required": false,
			"type": "string"
		}
	},
	"responses": {
		"204": {
			"description": "No Content"
		},
		"400": {
			"description": "Bad Request - The request is malformed",
			"schema": {
				"$ref": "#/definitions/BadRequestResponse"
			}
		},
		"401": {
			"description": "Unauthorized - The caller cannot be identified",
			"schema": {
				"$ref": "#/definitions/UnauthorizedResponse"
			}
		},
		"403": {
			"description": "Forbidden - The authenticated user does not have permission to perform this action",
			"schema": {
				"$ref": "#/definitions/ForbiddenResponse"
			}
		},
		"404": {
			"description": "Not Found - The requested resource does not exist",
			"schema": {
				"$ref": "#/definitions/NotFoundResponse"
			}
		},
		"409": {
			"description": "Conflict - The action cannot be performed in the system",
			"schema": {
				"$ref": "#/definitions/ConflictResponse"
			}
		}
	}
}