{
	"swagger": "2.0",
	"basePath": "/api/notification/1",
	"consumes": [
		"application/json"
	],
	"produces": [
		"application/json"
	],
	"schemes": [
		"https"
	],
	"info": {
		"title": "Paul's Notification Service Spec",
		"description": "Paul's Notification Service Spec (specification scratch-pad)",
		"version": "1"
	},
	"paths": {
		"/audits": {
			"post": {
				"summary": "Audits",
				"description": "Audits",
				"operationId": "postAudit",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Audit"
						}
					}
				],
				"responses": {
					"202": {
						"description": "Accepted"
					},
					"400": {
						"$ref": "#/responses/400"
					},
					"401": {
						"$ref": "#/responses/401"
					},
					"403": {
						"$ref": "#/responses/403"
					},
					"409": {
						"$ref": "#/responses/409"
					}
				},
				"tags": [
					"Audit"
				]
			}
		},
		"/reminders": {
			"post": {
				"summary": "Receive a reminder",
				"description": "Receive a reminder",
				"operationId": "postReminder",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Reminder"
						}
					}
				],
				"responses": {
					"202": {
						"description": "Accepted"
					},
					"400": {
						"$ref": "#/responses/400"
					},
					"401": {
						"$ref": "#/responses/401"
					},
					"403": {
						"$ref": "#/responses/403"
					},
					"409": {
						"$ref": "#/responses/409"
					}
				},
				"tags": [
					"Reminders"
				]
			}
		},
		"/events": {
			"post": {
				"summary": "Submit an event",
				"description": "Submit an event",
				"operationId": "postEvent",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Event"
						}
					}
				],
				"responses": {
					"202": {
						"description": "Accepted"
					},
					"400": {
						"$ref": "#/responses/400"
					},
					"401": {
						"$ref": "#/responses/401"
					},
					"403": {
						"$ref": "#/responses/403"
					},
					"409": {
						"$ref": "#/responses/409"
					}
				},
				"tags": [
					"Events"
				]
			}
		}
	},
	"definitions": {
		"Audit": {
			"description": "An audit",
			"discriminator": "auditType",
			"properties": {
				"at": {
					"description": "Time this event happened (UTC)",
					"type": "string",
					"format": "date-time"
				},
				"auditType": {
					"description": "Audit types",
					"type": "string",
					"enum": [
						"EVENT_ANNOTATED",
						"EVENT_CREATED"
					]
				},
				"by": {
					"$ref": "#/definitions/PersonReference"
				}
			},
			"required": [
				"at",
				"auditType"
			]
		},
		"EventAnnotatedAudit": {
			"description": "An event annotated audit",
			"allOf": [
				{
					"$ref": "#/definitions/Audit"
				},
				{
					"properties": {
						"auditType": {
							"type": "string",
							"enum": [
								"EVENT_ANNOTATED"
							]
						},
						"annotation": {
							"$ref": "#/definitions/EventAnnotation"
						}
					},
					"required": [
						"auditType",
						"annotation"
					]
				}
			]
		},
		"EventCreatedAudit": {
			"description": "An event created audit",
			"allOf": [
				{
					"$ref": "#/definitions/Audit"
				},
				{
					"properties": {
						"auditType": {
							"type": "string",
							"enum": [
								"EVENT_CREATED"
							]
						},
						"event": {
							"$ref": "#/definitions/Event"
						}
					},
					"required": [
						"auditType",
						"event"
					]
				}
			]
		},
		"Event": {
			"description": "Object containing only the data required to queue event processing",
			"properties": {
				"id": {
					"description": "UUID for an Event",
					"type": "string",
					"format": "uuid"
				},
				"eventId": {
					"description": "A legacy identifier (numeric) for an Event",
					"type": "string"
				},
				"eventType": {
					"description": "User generated or System generated event",
					"type": "string",
					"enum": [
						"USER",
						"SYSTEM"
					]
				},
				"priority": {
					"type": "string",
					"enum": [
						"LOW",
						"MEDIUM",
						"HIGH"
					]
				}
			},
			"required": [
				"id",
				"eventId",
				"eventType",
				"priority"
			]
		},
		"EventReference": {
			"properties": {
				"id": {
					"description": "A unique identifier (UUID) for this entity",
					"type": "string",
					"format": "uuid"
				},
				"eventId": {
					"description": "A legacy identifier (numeric) that represents this resource",
					"type": "string"
				},
				"eventType": {
					"description": "User generated or System generated event",
					"type": "string",
					"enum": [
						"USER",
						"SYSTEM"
					]
				},
				"priority": {
					"type": "string",
					"enum": [
						"LOW",
						"MEDIUM",
						"HIGH"
					]
				}
			},
			"required": [
				"id",
				"eventId",
				"eventType",
				"priority"
			]
		},
		"EventAnnotation": {
			"description": "An event annotation",
			"properties": {
				"id": {
					"type": "string",
					"format": "uuid"
				},
				"event": {
					"$ref": "#/definitions/EventReference"
				},
				"author": {
					"$ref": "#/definitions/PersonReference"
				},
				"source": {
					"type": "string",
					"enum": [
						"BROWSER",
						"IOS",
						"ANDROID"
					]
				},
				"comment": {
					"type": "string"
				},
				"created": {
					"type": "string",
					"format": "date-time"
				}
			},
			"required": [
				"id",
				"event",
				"author",
				"comment",
				"created"
			]
		},
		"RecipientReference": {
			"properties": {
				"id": {
					"description": "The identifier of the resource",
					"type": "string",
					"format": "uuid"
				},
				"targetName": {
					"description": "The target name of the recipient",
					"type": "string"
				},
				"recipientType": {
					"type": "string",
					"enum": [
						"GROUP",
						"PERSON",
						"DEVICE",
						"SITE"
					]
				},
				"status": {
					"description": "Whether the recipient is active. Inactive recipients do not receive notifications",
					"type": "string",
					"enum": [
						"ACTIVE",
						"INACTIVE",
						"INVALID"
					]
				}
			},
			"required": [
				"id",
				"recipientType",
				"targetName"
			]
		},
		"PersonReference": {
			"allOf": [
				{
					"$ref": "#/definitions/RecipientReference"
				},
				{
					"properties": {
						"id": {
							"description": "The identifier of the resource",
							"type": "string",
							"format": "uuid"
						},
						"targetName": {
							"description": "The target name of the resource",
							"type": "string"
						},
						"recipientType": {
							"type": "string",
							"enum": [
								"PERSON"
							]
						},
						"firstName": {
							"description": "The first name of the user",
							"type": "string"
						},
						"lastName": {
							"description": "The last name of the user",
							"type": "string"
						}
					},
					"required": [
						"id",
						"targetName",
						"firstName",
						"lastName"
					]
				}
			]
		},
		"Reminder": {
			"description": "A reminder",
			"properties": {
				"id": {
					"description": "Reminder identifier",
					"type": "string",
					"format": "uuid"
				},
				"at": {
					"description": "UTC Time this reminder was triggered",
					"type": "string",
					"format": "date-time"
				},
				"job": {
					"properties": {
						"id": {
							"description": "Job identifier",
							"type": "string",
							"format": "uuid"
						},
						"jobName": {
							"description": "A correlation identifier for this job",
							"type": "string"
						},
						"trigger": {
							"type": "object",
							"properties": {
								"startTime": {
									"type": "string",
									"format": "date-time"
								},
								"endTime": {
									"type": "string",
									"format": "date-time"
								},
								"cron": {
									"type": "string"
								},
								"timezone": {
									"type": "string"
								}
							},
							"required": [
								"startTime"
							]
						}
					},
					"required": [
						"id",
						"trigger"
					]
				},
				"payloadType": {
					"description": "Payload schema identification. Namespace and version",
					"type": "string"
				},
				"payload": {
					"description": "The Base64 encoded payload of the reminder",
					"type": "string"
				}
			},
			"required": [
				"id",
				"at",
				"job",
				"payloadType",
				"payload"
			]
		},
		"BadRequestResponse": {
			"properties": {
				"code": {
					"description": "HTTP status code",
					"format": "int32",
					"type": "integer",
					"enum": [
						400
					]
				},
				"subcode": {
					"description": "An application-specific response sub-status",
					"type": "string"
				},
				"message": {
					"description": "A detailed description of the response or error",
					"type": "string"
				},
				"reason": {
					"description": "A description of the response code",
					"enum": [
						"Bad Request"
					],
					"type": "string"
				}
			},
			"required": [
				"code",
				"subcode",
				"reason",
				"message"
			]
		},
		"UnauthorizedResponse": {
			"properties": {
				"code": {
					"description": "HTTP status code",
					"format": "int32",
					"type": "integer",
					"enum": [
						401
					]
				},
				"subcode": {
					"description": "An application-specific response sub-status",
					"type": "string"
				},
				"message": {
					"description": "A detailed description of the response or error",
					"type": "string"
				},
				"reason": {
					"description": "A description of the response code",
					"enum": [
						"Unauthorized"
					],
					"type": "string"
				}
			},
			"required": [
				"code",
				"subcode",
				"reason",
				"message"
			]
		},
		"ForbiddenResponse": {
			"properties": {
				"code": {
					"description": "HTTP status code",
					"format": "int32",
					"type": "integer",
					"enum": [
						403
					]
				},
				"subcode": {
					"description": "An application-specific response sub-status",
					"type": "string"
				},
				"message": {
					"description": "A detailed description of the response or error",
					"type": "string"
				},
				"reason": {
					"description": "A description of the response code",
					"enum": [
						"Forbidden"
					],
					"type": "string"
				}
			},
			"required": [
				"code",
				"subcode",
				"reason",
				"message"
			]
		},
		"NotFoundResponse": {
			"properties": {
				"code": {
					"description": "HTTP status code",
					"format": "int32",
					"type": "integer",
					"enum": [
						404
					]
				},
				"subcode": {
					"description": "An application-specific response sub-status",
					"type": "string"
				},
				"message": {
					"description": "A detailed description of the response or error",
					"type": "string"
				},
				"reason": {
					"description": "A description of the response code",
					"enum": [
						"Not Found"
					],
					"type": "string"
				}
			},
			"required": [
				"code",
				"subcode",
				"reason",
				"message"
			]
		},
		"ConflictResponse": {
			"properties": {
				"code": {
					"description": "HTTP status code",
					"format": "int32",
					"type": "integer",
					"enum": [
						409
					]
				},
				"subcode": {
					"description": "An application-specific response sub-status",
					"type": "string"
				},
				"message": {
					"description": "A detailed description of the response or error",
					"type": "string"
				},
				"reason": {
					"description": "A description of the response status",
					"enum": [
						"Conflict"
					],
					"type": "string"
				}
			},
			"required": [
				"code",
				"subcode",
				"reason",
				"message"
			]
		}
	},
	"parameters": {
		"query-after": {
			"description": "After this time or sequenced item identifier (exclusive)",
			"in": "query",
			"name": "after",
			"required": false,
			"type": "string"
		},
		"query-before": {
			"description": "Before this time or sequenced item identifier (exclusive)",
			"in": "query",
			"name": "before",
			"required": false,
			"type": "string"
		},
		"query-from": {
			"description": "After this time or sequenced item identifier (inclusive)",
			"in": "query",
			"name": "from",
			"required": false,
			"type": "string"
		},
		"query-limit": {
			"default": 100,
			"description": "Maximum result size to return",
			"in": "query",
			"maximum": 1000,
			"name": "limit",
			"required": false,
			"type": "integer"
		},
		"query-offset": {
			"default": 0,
			"description": "Skip this many results before returning the result set",
			"in": "query",
			"name": "offset",
			"required": false,
			"type": "integer"
		},
		"query-to": {
			"description": "Before this time or sequenced item identifier (inclusive)",
			"in": "query",
			"name": "to",
			"required": false,
			"type": "string"
		}
	},
	"responses": {
		"204": {
			"description": "No Content"
		},
		"400": {
			"description": "Bad Request - The request is malformed",
			"schema": {
				"$ref": "#/definitions/BadRequestResponse"
			}
		},
		"401": {
			"description": "Unauthorized - The caller cannot be identified",
			"schema": {
				"$ref": "#/definitions/UnauthorizedResponse"
			}
		},
		"403": {
			"description": "Forbidden - The authenticated user does not have permission to perform this action",
			"schema": {
				"$ref": "#/definitions/ForbiddenResponse"
			}
		},
		"404": {
			"description": "Not Found - The requested resource does not exist",
			"schema": {
				"$ref": "#/definitions/NotFoundResponse"
			}
		},
		"409": {
			"description": "Conflict - The action cannot be performed in the system",
			"schema": {
				"$ref": "#/definitions/ConflictResponse"
			}
		}
	}
}