{
    "swagger": "2.0",
    "basePath": "/api/audit/1",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https"
    ],
    "info": {
        "title": "Paul's Audit API Spec",
        "description": "Paul's Audit API Spec (specification scratch-pad)",
        "version": "1"
    },
    "paths": {
        "/audits": {
            "get": {
                "summary": "Audit records",
                "description": "Audit records",
                "operationId": "getAudits",
                "parameters": [
                    {
                        "$ref": "#/parameters/query-auditType"
                    },
                    {
                        "$ref": "#/parameters/query-eventId"
                    },
                    {
                        "$ref": "#/parameters/query-personId"
                    },
                    {
                        "$ref": "#/parameters/query-deviceId"
                    },
                    {
                        "$ref": "#/parameters/query-embed"
                    },
                    {
                        "$ref": "#/parameters/query-from"
                    },
                    {
                        "$ref": "#/parameters/query-to"
                    },
                    {
                        "$ref": "#/parameters/query-after"
                    },
                    {
                        "$ref": "#/parameters/query-before"
                    },
                    {
                        "$ref": "#/parameters/query-limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(Audit)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "tags": [
                    "Audit"
                ]
            }
        },
        "/events": {
            "get": {
                "summary": "Get Events",
                "description": "Returns a list of event resources in the xMatters system",
                "operationId": "getEvents",
                "parameters": [
                    {
                        "$ref": "#/parameters/query-status"
                    },
                    {
                        "$ref": "#/parameters/query-planId"
                    },
                    {
                        "$ref": "#/parameters/query-formId"
                    },
                    {
                        "$ref": "#/parameters/query-integrationId"
                    },
                    {
                        "$ref": "#/parameters/query-submitterId"
                    },
                    {
                        "$ref": "#/parameters/query-propertyName"
                    },
                    {
                        "$ref": "#/parameters/query-propertyValue"
                    },
                    {
                        "$ref": "#/parameters/query-requestId"
                    },
                    {
                        "$ref": "#/parameters/query-incidentId"
                    },
                    {
                        "$ref": "#/parameters/query-at"
                    },
                    {
                        "$ref": "#/parameters/query-from"
                    },
                    {
                        "$ref": "#/parameters/query-to"
                    },
                    {
                        "$ref": "#/parameters/query-after"
                    },
                    {
                        "$ref": "#/parameters/query-before"
                    },
                    {
                        "$ref": "#/parameters/query-limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(Event)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "tags": [
                    "Events"
                ]
            }
        },
        "/events/{revisionId}": {
            "get": {
                "description": "Returns information about an event. Use embed=conference,recipients to include conference and resolved recipients in the response",
                "operationId": "getEvent",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-revisionId"
                    },
                    {
                        "$ref": "#/parameters/query-embed"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "Returns information about an event",
                "tags": [
                    "Events"
                ]
            }
        },
        "/event-annotations": {
            "get": {
                "summary": "Get event annotations",
                "description": "Get event annotations",
                "operationId": "getEventAnnotations",
                "parameters": [
                    {
                        "$ref": "#/parameters/query-at"
                    },
                    {
                        "$ref": "#/parameters/query-from"
                    },
                    {
                        "$ref": "#/parameters/query-to"
                    },
                    {
                        "$ref": "#/parameters/query-after"
                    },
                    {
                        "$ref": "#/parameters/query-before"
                    },
                    {
                        "$ref": "#/parameters/query-limit"
                    },
                    {
                        "$ref": "#/parameters/query-eventId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(EventAnnotation)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "tags": [
                    "Events"
                ]
            }
        },
        "/event-annotations/{revisionId}": {
            "get": {
                "summary": "Get an event annotation",
                "description": "Get an event annotation",
                "operationId": "getEventAnnotation",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-revisionId"
                    },
                    {
                        "$ref": "#/parameters/query-eventId"
                    },
                    {
                        "$ref": "#/parameters/query-annotationId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/EventAnnotation"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "tags": [
                    "Events"
                ]
            }
        }
    },
    "definitions": {
        "Audit": {
            "type": "object",
            "description": "An audit",
            "properties": {
                "id": {
                    "description": "A unique identifier (UUID) for this entity",
                    "type": "string"
                },
                "at": {
                    "description": "Time this event happened (UTC)",
                    "type": "string",
                    "format": "date-time"
                },
                "type": {
                    "description": "Audit types",
                    "type": "string",
                    "enum": [
                        "CALL_BUSY",
                        "CALL_CONNECTED",
                        "CALL_DROPPED",
                        "CALL_FAILED",
                        "CALL_IN",
                        "CALL_NO_ANSWER",
                        "CALL_REACHED_VOICEMAIL",
                        "CONFERENCE_JOINED",
                        "CONFERENCE_LOGIN_FAILED",
                        "DEVICE_INVALIDATED",
                        "DEVICE_OVERRIDE_FAILED",
                        "DEVICE_REPLACED",
                        "EMAIL_FAILED",
                        "EMAIL_OPENED",
                        "EVENT_ANNOTATED",
                        "EVENT_COMPLETED",
                        "EVENT_CREATED",
                        "EVENT_RESUMED",
                        "EVENT_SUSPENDED",
                        "EVENT_TERMINATED",
                        "FAX_STATUS",
                        "FAX_SUBMITTED",
                        "GROUP_DELETED",
                        "INCIDENT_DELETED",
                        "NOTIFICATION_DELAYED",
                        "NOTIFICATION_DELIVERED",
                        "NOTIFICATION_DISCARDED",
                        "NOTIFICATION_ESCALATED",
                        "NOTIFICATION_FAILED",
                        "NOTIFICATION_HUNG_UP",
                        "NOTIFICATION_RECIPIENT_NOT_FOUND",
                        "NOTIFICATION_RECIPIENT_REPLACED",
                        "PROTOCOL_EXHAUSTED",
                        "PUBLIC_ADDRESS_FAILED",
                        "RESPONSE_MAPPED",
                        "RESPONSE_RECEIVED",
                        "RESPONSE_REJECTED",
                        "SMS_DELIVERED",
                        "SMS_READ",
                        "SUBSCRIPTION_CREATED"
                    ]
                }
            },
            "required": [
                "id",
                "at",
                "type"
            ]
        },
        "EventAnnotatedAudit": {
            "type": "object",
            "description": "An event annotated audit",
            "allOf": [
                {
                    "$ref": "#/definitions/Audit"
                }
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "EVENT_ANNOTATED"
                    ]
                },
                "annotation": {
                    "$ref": "#/definitions/EventAnnotation"
                }
            },
            "required": [
                "type",
                "annotation"
            ]
        },
        "EventCompletedAudit": {
            "type": "object",
            "description": "An event completed audit",
            "allOf": [
                {
                    "$ref": "#/definitions/Audit"
                }
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "EVENT_COMPLETED"
                    ]
                },
                "event": {
                    "$ref": "#/definitions/Event"
                }
            },
            "required": [
                "type",
                "event"
            ]
        },
        "EventCreatedAudit": {
            "type": "object",
            "description": "An event created audit",
            "allOf": [
                {
                    "$ref": "#/definitions/Audit"
                }
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "EVENT_CREATED"
                    ]
                },
                "event": {
                    "$ref": "#/definitions/Event"
                }
            },
            "required": [
                "type",
                "event"
            ]
        },
        "EventResumedAudit": {
            "type": "object",
            "description": "An event resumed audit",
            "allOf": [
                {
                    "$ref": "#/definitions/Audit"
                }
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "EVENT_RESUMED"
                    ]
                },
                "event": {
                    "$ref": "#/definitions/Event"
                }
            },
            "required": [
                "type",
                "event"
            ]
        },
        "EventResumedAudit": {
            "type": "object",
            "description": "An event suspended audit",
            "allOf": [
                {
                    "$ref": "#/definitions/Audit"
                }
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "EVENT_SUSPENDED"
                    ]
                },
                "event": {
                    "$ref": "#/definitions/Event"
                }
            },
            "required": [
                "type",
                "event"
            ]
        },
        "EventTerminatedAudit": {
            "type": "object",
            "description": "An event terminated audit",
            "allOf": [
                {
                    "$ref": "#/definitions/Audit"
                }
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "EVENT_TERMINATED"
                    ]
                },
                "event": {
                    "$ref": "#/definitions/Event"
                }
            },
            "required": [
                "type",
                "event"
            ]
        },
        "ResponseReceivedAudit": {
            "type": "object",
            "description": "A response received audit",
            "allOf": [
                {
                    "$ref": "#/definitions/Audit"
                }
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "RESPONSE_RECEIVED"
                    ]
                },
                "response": {
                    "$ref": "#/definitions/Response"
                }
            },
            "required": [
                "type",
                "response"
            ]
        },
        "ConferenceReference": {
            "properties": {
                "bridgeId": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "BRIDGE",
                        "EXTERNAL"
                    ]
                }
            },
            "required": [
                "type",
                "bridgeId"
            ]
        },
        "Device": {
            "type": "object",
            "description": "A device in xMatters is any means of receiving a notification message. Devices can include physical items like phones, or intangible items such as email accounts",
            "allOf": [
                {
                    "$ref": "#/definitions/Recipient"
                }
            ],
            "discriminator": "deviceType",
            "properties": {
                "defaultDevice": {
                    "description": "True if this device can receive notifications when the user has no active devices",
                    "type": "boolean"
                },
                "delay": {
                    "description": "The number of minutes to wait for a response before contacting the next device",
                    "format": "int32",
                    "type": "integer"
                },
                "description": {
                    "description": "A description of the device",
                    "type": "string"
                },
                "deviceType": {
                    "description": "The type of the device",
                    "type": "string",
                    "enum": [
                        "ANDROID_PUSH",
                        "APPLE_PUSH",
                        "BLACKBERRY_PUSH",
                        "BROWSER",
                        "EMAIL",
                        "FAX",
                        "GENERIC",
                        "IM",
                        "NUMERIC_PAGER",
                        "TEXT_PAGER",
                        "TEXT_PHONE",
                        "VOICE",
                        "VOICE_IVR"
                    ]
                },
                "name": {
                    "description": "The name of the device. Example: Work Email, Home Phone",
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/PersonReference"
                },
                "priorityThreshold": {
                    "description": "The minimum priority of an event for it to be delivered to this device",
                    "enum": [
                        "LOW",
                        "HIGH",
                        "MEDIUM"
                    ],
                    "type": "string"
                },
                "provider": {
                    "$ref": "#/definitions/ProviderReference"
                },
                "recipientType": {
                    "enum": [
                        "DEVICE"
                    ],
                    "type": "string"
                },
                "sequence": {
                    "description": "The order in which the device will be contacted, where 0 represents the first device contacted",
                    "format": "int32",
                    "type": "integer"
                },
                "testStatus": {
                    "description": "Whether the device has been tested",
                    "enum": [
                        "TESTED",
                        "UNTESTED",
                        "PENDING",
                        "INVALID"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "owner",
                "deviceType"
            ]
        },
        "BlackberryPushDevice": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Device"
                }
            ],
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "deviceType": {
                    "enum": [
                        "BLACKBERRY_PUSH"
                    ],
                    "type": "string"
                },
                "registrationId": {
                    "type": "string"
                }
            },
            "required": [
                "accountId",
                "registrationId"
            ]
        },
        "EmailDevice": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Device"
                }
            ],
            "properties": {
                "deviceType": {
                    "enum": [
                        "EMAIL"
                    ],
                    "type": "string"
                },
                "emailAddress": {
                    "type": "string"
                }
            },
            "required": [
                "emailAddress"
            ]
        },
        "FaxDevice": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Device"
                }
            ],
            "properties": {
                "country": {
                    "enum": [
                        "AR",
                        "AU",
                        "BR",
                        "CA",
                        "FR",
                        "DE",
                        "HK",
                        "IN",
                        "IT",
                        "JP",
                        "PT",
                        "PR",
                        "GB",
                        "US"
                    ],
                    "type": "string"
                },
                "deviceType": {
                    "enum": [
                        "FAX"
                    ],
                    "type": "string"
                },
                "phoneNumber": {
                    "pattern": "^\\d{5,20}$",
                    "type": "string"
                }
            },
            "required": [
                "phoneNumber"
            ]
        },
        "GenericDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/Device"
                }
            ],
            "properties": {
                "deviceType": {
                    "enum": [
                        "GENERIC"
                    ],
                    "type": "string"
                },
                "pin": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IMDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/Device"
                }
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "deviceType": {
                    "enum": [
                        "IM"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "address"
            ],
            "type": "object"
        },
        "SMSDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/Device"
                }
            ],
            "properties": {
                "deviceType": {
                    "enum": [
                        "TEXT_PHONE"
                    ],
                    "type": "string"
                },
                "phoneNumber": {
                    "description": "E.164 international format phone number including + and country code",
                    "type": "string"
                }
            },
            "required": [
                "phoneNumber"
            ],
            "type": "object"
        },
        "TextPagerDevice": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Device"
                }
            ],
            "properties": {
                "deviceType": {
                    "enum": [
                        "TEXT_PAGER"
                    ],
                    "type": "string"
                },
                "pin": {
                    "type": "string"
                },
                "twoWayDevice": {
                    "type": "boolean"
                }
            },
            "required": [
                "pin",
                "twoWayDevice"
            ]
        },
        "NumericPagerDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/Device"
                }
            ],
            "properties": {
                "areaCode": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "deviceType": {
                    "type": "string",
                    "enum": [
                        "NUMERIC_PAGER"
                    ]
                },
                "pagerNumber": {
                    "type": "string"
                },
                "pin": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PublicAddressDevice": {
            "type": "object",
            "description": "a.k.a. Voice IVR",
            "allOf": [
                {
                    "$ref": "#/definitions/Device"
                }
            ],
            "properties": {
                "deviceType": {
                    "enum": [
                        "VOICE_IVR"
                    ],
                    "type": "string"
                },
                "phoneNumber": {
                    "description": "E.164 international format phone number including +, country code, and extension",
                    "type": "string"
                }
            },
            "required": [
                "phoneNumber"
            ]
        },
        "Event": {
            "type": "object",
            "description": "Returns an event in the xMatters system",
            "properties": {
                "id": {
                    "description": "An identifier (UUID) that represents this resource",
                    "type": "string"
                },
                "eventId": {
                    "description": "A legacy identifier (numeric) that represents this resource",
                    "type": "string"
                },
                "bypassPhoneIntro": {
                    "type": "boolean"
                },
                "conference": {
                    "$ref": "#/definitions/ConferenceReference"
                },
                "created": {
                    "format": "date-time",
                    "type": "string"
                },
                "escalationOverride": {
                    "type": "boolean"
                },
                "expirationInMinutes": {
                    "type": "integer"
                },
                "terminated": {
                    "format": "date-time",
                    "type": "string"
                },
                "form": {
                    "$ref": "#/definitions/FormReference"
                },
                "incident": {
                    "type": "string"
                },
                "integration": {
                    "$ref": "#/definitions/IntegrationReference"
                },
                "otherResponseCount": {
                    "type": "integer"
                },
                "overrideDeviceRestrictions": {
                    "default": false,
                    "type": "boolean"
                },
                "priority": {
                    "enum": [
                        "LOW",
                        "MEDIUM",
                        "HIGH"
                    ],
                    "type": "string"
                },
                "properties": {
                    "description": "Map of property names and values",
                    "type": "object"
                },
                "requestId": {
                    "type": "string"
                },
                "requirePhonePassword": {
                    "type": "boolean"
                },
                "responseCountsEnabled": {
                    "default": false,
                    "type": "boolean"
                },
                "senderOverrides": {
                    "$ref": "#/definitions/SenderOverrides"
                },
                "status": {
                    "enum": [
                        "ACTIVE",
                        "SUSPENDED",
                        "TERMINATED"
                    ],
                    "type": "string"
                },
                "submitter": {
                    "$ref": "#/definitions/PersonReference"
                },
                "voicemailOptions": {
                    "$ref": "#/definitions/VoicemailOptions"
                }
            },
            "required": [
                "id",
                "eventId",
                "created",
                "status",
                "priority",
                "form"
            ]
        },
        "EventReference": {
            "properties": {
                "id": {
                    "description": "A unique identifier (UUID) for this entity",
                    "type": "string"
                },
                "eventId": {
                    "description": "A legacy identifier (numeric) that represents this resource",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "EventAnnotation": {
            "type": "object",
            "description": "An event annotation",
            "properties": {
                "id": {
                    "type": "string"
                },
                "event": {
                    "$ref": "#/definitions/EventReference"
                },
                "author": {
                    "$ref": "#/definitions/PersonReference"
                },
                "comment": {
                    "type": "string"
                }
            },
            "required": [
                "id",
                "event",
                "author",
                "comment"
            ]
        },
        "FormReference": {
            "properties": {
                "id": {
                    "description": "The identifier of the resource",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "id",
                "name"
            ]
        },
        "IntegrationReference": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "NotificationReference": {
            "properties": {
                "id": {
                    "description": "The identifier of the resource",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "Person": {
            "type": "object",
            "description": "Someone in the xMatters system who can receive notifications is called a 'Person'. Every person in the xMatters system is a user defined by a set of details, including ID number, user name, login password, and so on",
            "allOf": [
                {
                    "$ref": "#/definitions/Recipient"
                }
            ],
            "properties": {
                "firstName": {
                    "description": "The first name of the user",
                    "type": "string"
                },
                "language": {
                    "description": "The preferred language of the user: Example: en",
                    "type": "string"
                },
                "lastName": {
                    "description": "The last name of the user",
                    "type": "string"
                },
                "phoneLogin": {
                    "description": "A numeric string that identifies users when they phone in to xMatters. This string may contain only digits and must be unique within the company",
                    "type": "string"
                },
                "recipientType": {
                    "enum": [
                        "PERSON"
                    ],
                    "type": "string"
                },
                "timezone": {
                    "description": "The time zone of the user. Example:  US/Pacific",
                    "type": "string"
                },
                "webLogin": {
                    "description": "The ID of the user when they log on to the web user interface. This value must be unique within the company and is often identical to the targetName field",
                    "type": "string"
                },
                "deliveryStatus": {
                    "description": "Delivery status",
                    "type": "string",
                    "enum": [
                        "PENDING",
                        "DELIVERED",
                        "RESPONDED",
                        "FAILED"
                    ]
                },
                "properties": {
                    "description": "Key/Value map of custom properties",
                    "type": "object"
                },
                "response": {
                    "$ref": "#/definitions/Response"
                },
                "site": {
                    "$ref": "#/definitions/SiteReference"
                }
            },
            "required": [
                "firstName",
                "lastName"
            ]
        },
        "PersonReference": {
            "properties": {
                "id": {
                    "description": "The identifier of the resource",
                    "type": "string"
                },
                "targetName": {
                    "description": "The target name of the resource",
                    "type": "string"
                },
                "firstName": {
                    "description": "The first name of the user",
                    "type": "string"
                },
                "lastName": {
                    "description": "The last name of the user",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "targetName"
            ]
        },
        "ProviderReference": {
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "Recipient": {
            "type": "object",
            "discriminator": "recipientType",
            "properties": {
                "id": {
                    "description": "A unique identifier (UUID) for this entity",
                    "type": "string"
                },
                "targetName": {
                    "description": "An identifier such as a name that can be used to identify a resource",
                    "type": "string"
                },
                "recipientType": {
                    "enum": [
                        "PERSON",
                        "DEVICE",
                        "GROUP",
                        "DYNAMIC_TEAM",
                        "SITE",
                        "ROLE"
                    ],
                    "type": "string"
                },
                "status": {
                    "description": "Whether the recipient is active. Inactive recipients do not receive notifications",
                    "enum": [
                        "ACTIVE",
                        "INACTIVE",
                        "INVALID"
                    ],
                    "type": "string"
                },
                "externalKey": {
                    "description": "Identifies this resource in an external system. Used when externallyOwned is true",
                    "type": "string"
                },
                "externallyOwned": {
                    "description": "True if this resource is managed by an external system. Externally-owned resources cannot be deleted in the xMatters user interface",
                    "type": "boolean"
                },
                "targeted": {
                    "description": "Indicates if this is a targeted recipient. If omitted assume false",
                    "type": "string"
                },
                "locked": {
                    "description": "Lists the fields of externally-owned objects that are locked and cannot be modified in the xMatters user interface",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "responseCount": {
                    "description": "Number of responses required before xMatters stops notifying targeted group or dynamic team",
                    "type": "integer",
                    "minimum": 1
                }
            },
            "required": [
                "id",
                "targetName",
                "recipientType",
                "externallyOwned",
                "status"
            ]
        },
        "Response": {
            "type": "object",
            "description": "A response",
            "properties": {
                "notification": {
                    "$ref": "#/definitions/NotificationReference"
                },
                "option": {
                    "$ref": "#/definitions/ResponseOption"
                },
                "response": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "source": {
                    "type": "string",
                    "enum": [
                        "BROWSER",
                        "IOS",
                        "ANDROID"
                    ]
                },
                "deviceName": {
                    "type": "string"
                },
                "received": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "required": [
                "notification",
                "response",
                "received"
            ]
        },
        "ResponseOption": {
            "type": "object",
            "description": "A response option",
            "properties": {
                "action": {
                    "type": "string"
                },
                "contribution": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "number": {
                    "format": "int32",
                    "type": "integer"
                },
                "prompt": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            },
            "required": [
                "number",
                "text",
                "description",
                "prompt"
            ]
        },
        "SenderOverrides": {
            "type": "object",
            "description": "Sender Overrides",
            "properties": {
                "callerId": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                }
            }
        },
        "SiteReference": {
            "properties": {
                "id": {
                    "description": "The identifier of the resource",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "VoicemailOptions": {
            "type": "object",
            "description": "Voicemail Options",
            "properties": {
                "every": {
                    "type": "integer"
                },
                "leave": {
                    "type": "string"
                },
                "retry": {
                    "type": "integer"
                }
            }
        },
        "Pagination(Audit)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/Audit"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(Event)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/Event"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(EventAnnotation)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/EventAnnotation"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "PaginationLinks": {
            "properties": {
                "next": {
                    "description": "A link to the next page of results",
                    "type": "string"
                },
                "previous": {
                    "description": "A link to the previous page of results",
                    "type": "string"
                },
                "self": {
                    "description": "A link to this page of results",
                    "type": "string"
                }
            },
            "required": [
                "self"
            ]
        },
        "BadRequestResponse": {
            "properties": {
                "code": {
                    "description": "An application-specific error code",
                    "format": "int32",
                    "type": "integer"
                },
                "message": {
                    "description": "A detailed description of the response or error",
                    "type": "string"
                },
                "reason": {
                    "description": "A description of the response code",
                    "enum": [
                        "Bad Request"
                    ],
                    "type": "string"
                },
                "status": {
                    "description": "The HTTP status code",
                    "enum": [
                        400
                    ],
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "status",
                "reason",
                "message"
            ]
        },
        "UnauthorizedResponse": {
            "properties": {
                "code": {
                    "description": "An application-specific error code",
                    "format": "int32",
                    "type": "integer"
                },
                "message": {
                    "description": "A detailed description of the response or error",
                    "type": "string"
                },
                "reason": {
                    "description": "A description of the response code",
                    "enum": [
                        "Unauthorized"
                    ],
                    "type": "string"
                },
                "status": {
                    "description": "The HTTP status code",
                    "enum": [
                        401
                    ],
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "status",
                "reason",
                "message"
            ]
        },
        "ForbiddenResponse": {
            "properties": {
                "code": {
                    "description": "An application-specific error code",
                    "format": "int32",
                    "type": "integer"
                },
                "message": {
                    "description": "A detailed description of the response or error",
                    "type": "string"
                },
                "reason": {
                    "description": "A description of the response code",
                    "enum": [
                        "Forbidden"
                    ],
                    "type": "string"
                },
                "status": {
                    "description": "The HTTP status code",
                    "enum": [
                        403
                    ],
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "status",
                "reason",
                "message"
            ]
        },
        "NotFoundResponse": {
            "properties": {
                "code": {
                    "description": "An application-specific error code",
                    "format": "int32",
                    "type": "integer"
                },
                "message": {
                    "description": "A detailed description of the response or error",
                    "type": "string"
                },
                "reason": {
                    "description": "A description of the response code",
                    "enum": [
                        "Not Found"
                    ],
                    "type": "string"
                },
                "status": {
                    "description": "The HTTP status code",
                    "enum": [
                        404
                    ],
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "status",
                "reason",
                "message"
            ]
        }
    },
    "parameters": {
        "path-revisionId": {
            "description": "Revision identifier",
            "in": "path",
            "name": "revisionId",
            "required": true,
            "type": "string"
        },
        "query-annotationId": {
            "description": "Annotation identifier",
            "in": "query",
            "name": "annotationId",
            "required": false,
            "type": "string"
        },
        "query-auditType": {
            "description": "Audit type",
            "in": "query",
            "name": "auditType",
            "required": false,
            "type": "string"
        },
        "query-after": {
            "description": "After this time or sequenced item identifier (exclusive)",
            "in": "query",
            "name": "after",
            "required": false,
            "type": "string"
        },
        "query-at": {
            "description": "At this time",
            "format": "date-time",
            "in": "query",
            "name": "at",
            "required": false,
            "type": "string"
        },
        "query-before": {
            "description": "Before this time or sequenced item identifier (exclusive)",
            "in": "query",
            "name": "before",
            "required": false,
            "type": "string"
        },
        "query-deviceId": {
            "description": "The device uuid or name",
            "in": "query",
            "name": "deviceId",
            "required": false,
            "type": "string"
        },
        "query-deviceType": {
            "description": "Device type",
            "enum": [
                "ANDROID_PUSH",
                "APPLE_PUSH",
                "BLACKBERRY_PUSH",
                "BROWSER",
                "EMAIL",
                "FAX",
                "GENERIC",
                "IM",
                "NUMERIC_PAGER",
                "TEXT_PAGER",
                "TEXT_PHONE",
                "VOICE",
                "VOICE_IVR"
            ],
            "in": "query",
            "name": "deviceType",
            "required": false,
            "type": "string"
        },
        "query-embed": {
            "description": "Comma separated list of linked domain entities to embed in the response",
            "in": "query",
            "name": "embed",
            "required": false,
            "type": "string"
        },
        "query-eventId": {
            "description": "Event id",
            "in": "query",
            "name": "eventId",
            "required": false,
            "type": "string"
        },
        "query-formId": {
            "description": "The form uuid or name",
            "in": "query",
            "name": "formId",
            "required": false,
            "type": "string"
        },
        "query-from": {
            "description": "After this time or sequenced item identifier (inclusive)",
            "in": "query",
            "name": "from",
            "required": false,
            "type": "string"
        },
        "query-incidentId": {
            "description": "Incident id",
            "in": "query",
            "name": "incidentId",
            "required": false,
            "type": "string"
        },
        "query-integrationId": {
            "description": "Integration id",
            "in": "query",
            "name": "integrationId",
            "required": false,
            "type": "string"
        },
        "query-limit": {
            "default": 100,
            "description": "Maximum result size to return",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer"
        },
        "query-personId": {
            "description": "The person's uuid or targetName",
            "in": "query",
            "name": "personId",
            "required": false,
            "type": "string"
        },
        "query-planId": {
            "description": "The plan uuid or name",
            "in": "query",
            "name": "planId",
            "required": false,
            "type": "string"
        },
        "query-requestId": {
            "description": "Request identifier",
            "in": "query",
            "name": "requestId",
            "required": false,
            "type": "string"
        },
        "query-status": {
            "description": "Event status",
            "enum": [
                "ACTIVE",
                "SUSPENDED",
                "TERMINATED"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
        },
        "query-submitterId": {
            "description": "The id or targetName of the submitter",
            "in": "query",
            "name": "submitterId",
            "required": false,
            "type": "string"
        },
        "query-to": {
            "description": "Before this time or sequenced item identifier (inclusive)",
            "in": "query",
            "name": "to",
            "required": false,
            "type": "string"
        },
        "query-propertyName": {
            "description": "Embedded property name",
            "in": "query",
            "name": "propertyName",
            "required": false,
            "type": "string"
        },
        "query-propertyValue": {
            "description": "Embedded property value",
            "in": "query",
            "name": "propertyValue",
            "required": false,
            "type": "string"
        }
    },
    "responses": {
        "400": {
            "description": "Bad Request - The request is malformed",
            "schema": {
                "$ref": "#/definitions/BadRequestResponse"
            }
        },
        "401": {
            "description": "Unauthorized - The caller cannot be identified",
            "schema": {
                "$ref": "#/definitions/UnauthorizedResponse"
            }
        },
        "403": {
            "description": "Forbidden - The authenticated user does not have permission to perform this action",
            "schema": {
                "$ref": "#/definitions/ForbiddenResponse"
            }
        },
        "404": {
            "description": "Not Found - The requested resource does not exist",
            "schema": {
                "$ref": "#/definitions/NotFoundResponse"
            }
        }
    }
}
