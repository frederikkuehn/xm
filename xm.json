{
    "swagger": "2.0",
    "basePath": "/api/xm/1",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https"
    ],
    "info": {
        "title": "Paul's xM API Spec",
        "description": "Paul's xM API Spec (specification scratch-pad)",
        "version": "1"
    },
    "paths": {
        "/oauth2/token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Generate a token",
                "description": "Generate a token",
                "operationId": "postAccessToken",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Authentication credentials",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Credentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccessToken"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            }
        },
        "/calendar": {
            "get": {
                "summary": "DEPRECATED use GET /on-call",
                "description": "DEPRECATED use GET /on-call",
                "operationId": "getCalendar",
                "parameters": [
                    {
                        "$ref": "#/parameters/query-at"
                    },
                    {
                        "$ref": "#/parameters/query-embed"
                    },
                    {
                        "$ref": "#/parameters/query-groups"
                    },
                    {
                        "$ref": "#/parameters/query-from"
                    },
                    {
                        "$ref": "#/parameters/query-to"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(ShiftOccurrence)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "tags": [
                    "Calendar"
                ]
            }
        },
        "/conferences/{conferenceId}/participants": {
            "post": {
                "summary": "Add a conference participant",
                "description": "Add a conference participant",
                "operationId": "postConferenceParticipant",
                "parameters": [
                    {
                        "description": "A new conference participant",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConferenceParticipantInput"
                        }
                    },
                    {
                        "$ref": "#/parameters/path-conferenceId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/ConferenceParticipant"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ConferenceParticipant"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "409": {
                        "$ref": "#/responses/409"
                    }
                },
                "tags": [
                    "Conferences"
                ]
            }
        },
        "/countries": {
            "get": {
                "description": "List of countries",
                "operationId": "getCountries",
                "parameters": [
                    {
                        "$ref": "#/parameters/query-used"
                    },
                    {
                        "$ref": "#/parameters/query-offset"
                    },
                    {
                        "$ref": "#/parameters/query-limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(Country)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "List of countries",
                "tags": [
                    "Countries"
                ]
            }
        },
        "/deep-links": {
            "post": {
                "description": "Generate a single use, expiring, link with associated action and meta data",
                "operationId": "postDeepLink",
                "parameters": [
                    {
                        "description": "An object that contains the definition of the new link",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeepLinkInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/DeepLink"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/DeepLink"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "409": {
                        "$ref": "#/responses/409"
                    }
                },
                "summary": "Create or update a deep link",
                "tags": [
                    "Deep Links"
                ]
            }
        },
        "/deep-links/{deepLinkToken}": {
            "get": {
                "description": "Returns information about a deep link",
                "operationId": "getDeepLink",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-deepLinkToken"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeepLink"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "Returns information about a deep link",
                "tags": [
                    "Deep Links"
                ]
            }
        },
        "/device-names": {
            "get": {
                "description": "Returns information about device names",
                "operationId": "getDeviceNames",
                "parameters": [
                    {
                        "$ref": "#/parameters/query-deviceType"
                    },
                    {
                        "$ref": "#/parameters/query-deviceName"
                    },
                    {
                        "$ref": "#/parameters/query-offset"
                    },
                    {
                        "$ref": "#/parameters/query-limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(DeviceName)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "Returns information about device names",
                "tags": [
                    "Device Names"
                ]
            }
        },
        "/device-types": {
            "get": {
                "description": "Returns device types",
                "operationId": "getDeviceTypes",
                "parameters": [
                    {
                        "$ref": "#/parameters/query-offset"
                    },
                    {
                        "$ref": "#/parameters/query-limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(DeviceType)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "Returns device types",
                "tags": [
                    "Device Types"
                ]
            }
        },
        "/devices": {
            "get": {
                "description": "Returns information about devices",
                "operationId": "getDevices",
                "parameters": [
                    {
                        "$ref": "#/parameters/query-deviceType"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(Device)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "Returns information about devices",
                "tags": [
                    "Devices"
                ]
            },
            "post": {
                "description": "Add a device",
                "operationId": "postDevice",
                "parameters": [
                    {
                        "description": "An object that contains the definition of the new device",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeviceInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "409": {
                        "$ref": "#/responses/409"
                    }
                },
                "summary": "Add a device",
                "tags": [
                    "Devices"
                ]
            }
        },
        "/devices/{deviceId}": {
            "delete": {
                "description": "Deletes a device and removes it from the owner's device list",
                "operationId": "deleteDevice",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-deviceId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    },
                    "204": {
                        "$ref": "#/responses/204"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "409": {
                        "$ref": "#/responses/409"
                    }
                },
                "summary": "Deletes a device",
                "tags": [
                    "Devices"
                ]
            },
            "get": {
                "description": "Returns information about a device. Use embed=timeframes to include device timeframes in the response",
                "operationId": "getDevice",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-deviceId"
                    },
                    {
                        "$ref": "#/parameters/query-embed"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "Returns information about a device",
                "tags": [
                    "Devices"
                ]
            }
        },
        "/events": {
            "get": {
                "description": "Returns a list of event resources in the xMatters system",
                "operationId": "getEvents",
                "parameters": [
                    {
                        "$ref": "#/parameters/query-planId"
                    },
                    {
                        "$ref": "#/parameters/query-formId"
                    },
                    {
                        "$ref": "#/parameters/query-integrationId"
                    },
                    {
                        "$ref": "#/parameters/query-submitterId"
                    },
                    {
                        "$ref": "#/parameters/query-propertyName"
                    },
                    {
                        "$ref": "#/parameters/query-propertyValue"
                    },
                    {
                        "$ref": "#/parameters/query-requestId"
                    },
                    {
                        "$ref": "#/parameters/query-from"
                    },
                    {
                        "$ref": "#/parameters/query-to"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(Event)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "Get Events",
                "tags": [
                    "Events"
                ]
            },
            "post": {
                "description": "Submit or update an event",
                "operationId": "postEvent",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "409": {
                        "$ref": "#/responses/409"
                    }
                },
                "summary": "Submit an event",
                "tags": [
                    "Events"
                ]
            }
        },
        "/events/{eventId}": {
            "get": {
                "description": "Returns information about an event. Use embed=conference,recipients to include conference and resolved recipients in the response",
                "operationId": "getEvent",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-eventId"
                    },
                    {
                        "$ref": "#/parameters/query-embed"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "Returns information about an event",
                "tags": [
                    "Events"
                ]
            }
        },
        "/events/{eventId}/audits": {
            "get": {
                "description": "Returns an audit of an event",
                "operationId": "getEventAudits",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-eventId"
                    },
                    {
                        "$ref": "#/parameters/query-before"
                    },
                    {
                        "$ref": "#/parameters/query-after"
                    },
                    {
                        "$ref": "#/parameters/query-limit"
                    },
                    {
                        "$ref": "#/parameters/query-embed"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(Audit)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "Returns an audit of an event",
                "tags": [
                    "Events"
                ]
            }
        },
        "/events/{eventId}/recipients": {
            "get": {
                "description": "Returns information about event recipients",
                "operationId": "getEventRecipients",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-eventId"
                    },
                    {
                        "description": "Case insensitive substring match within firstName, lastName, id, targetName, webLogin, email, phoneNumber. Search terms may be separated by spaces, results are returned that match ANY of the search terms",
                        "in": "query",
                        "name": "search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "searchType",
                        "in": "query",
                        "name": "searchType",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "CONTAINS",
                            "STARTS_WITH",
                            "ENDS_WITH",
                            "EQUALS"
                        ]
                    },
                    {
                        "description": "recipientType",
                        "in": "query",
                        "name": "recipientType",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "PERSON",
                            "DEVICE",
                            "GROUP"
                        ]
                    },
                    {
                        "description": "targeted",
                        "in": "query",
                        "name": "targeted",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "deliveryStatus",
                        "in": "query",
                        "name": "deliveryStatus",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "PENDING",
                            "DELIVERED",
                            "RESPONDED",
                            "FAILED"
                        ]
                    },
                    {
                        "$ref": "#/parameters/query-offset"
                    },
                    {
                        "$ref": "#/parameters/query-limit"
                    },
                    {
                        "$ref": "#/parameters/query-embed"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(Recipient)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "Returns information about event recipients",
                "tags": [
                    "Events"
                ]
            }
        },
        "/feature-toggles": {
            "get": {
                "tags": [
                    "Feature Toggles"
                ],
                "summary": "Get feature toggles",
                "description": "Get feature toggles",
                "operationId": "getFeatureToggles",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The toggle name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(FeatureToggle)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    }
                }
            }
        },
        "/groups": {
            "get": {
                "description": "List Groups. Can embed group calendar e.g. embed=calendar(at: '2015-11-02T22:54:19Z') e.g. embed=calendar(from: '2015-11-02T22:54:19Z', to: '2015-11-03T22:54:19Z')",
                "operationId": "getGroups",
                "parameters": [
                    {
                        "description": "Case insensitive substring match within name, description. Search terms may be separated by spaces, results are returned that match ALL if the search terms of the operand is set to AND, or ANY of the search terms if the operand is set to OR",
                        "in": "query",
                        "name": "search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Group supervisors include this person. UUID or targetName",
                        "in": "query",
                        "name": "supervisor",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Operand to use in search",
                        "in": "query",
                        "name": "operand",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "OR",
                            "AND"
                        ],
                        "default": "OR"
                    },
                    {
                        "$ref": "#/parameters/query-offset"
                    },
                    {
                        "$ref": "#/parameters/query-limit"
                    },
                    {
                        "$ref": "#/parameters/query-embed"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(Group)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "List Groups",
                "tags": [
                    "Groups"
                ]
            },
            "post": {
                "description": "Creates a group",
                "operationId": "postGroup",
                "parameters": [
                    {
                        "description": "An object that contains a description of the new group",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "409": {
                        "$ref": "#/responses/409"
                    }
                },
                "summary": "Creates a group",
                "tags": [
                    "Groups"
                ]
            }
        },
        "/groups/{groupId}": {
            "delete": {
                "description": "Deletes a Group",
                "operationId": "deleteGroup",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-groupId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    },
                    "204": {
                        "$ref": "#/responses/204"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    }
                },
                "summary": "Deletes a Group",
                "tags": [
                    "Groups"
                ]
            },
            "get": {
                "description": "Returns information about a Group",
                "operationId": "getGroup",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-groupId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "Returns information about a Group",
                "tags": [
                    "Groups"
                ]
            }
        },
        "/groups/{groupId}/calendar": {
            "get": {
                "description": "Shift occurrence calendar",
                "operationId": "getGroupCalendar",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-groupId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(ShiftOccurrence)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "Shift occurrence calendar",
                "tags": [
                    "Group Calendar"
                ]
            }
        },
        "/groups/{groupId}/members": {
            "get": {
                "description": "List Group members",
                "operationId": "getGroupMembers",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-groupId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(GroupMember)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "List Group members",
                "tags": [
                    "Group Members"
                ]
            },
            "post": {
                "description": "Add Group members",
                "operationId": "postGroupMember",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-groupId"
                    },
                    {
                        "description": "Member to add",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RecipientPointer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GroupMember"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    },
                    "409": {
                        "$ref": "#/responses/409"
                    }
                },
                "summary": "Add Group members",
                "tags": [
                    "Group Members"
                ]
            }
        },
        "/groups/{groupId}/members/{memberId}": {
            "delete": {
                "description": "Removes a Group Member",
                "operationId": "deleteGroupMember",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-groupId"
                    },
                    {
                        "$ref": "#/parameters/path-memberId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GroupMember"
                        }
                    },
                    "204": {
                        "$ref": "#/responses/204"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/403"
                    }
                },
                "summary": "Removes a Group Member",
                "tags": [
                    "Group Members"
                ]
            }
        },
        "/groups/{groupId}/roster": {
            "get": {
                "description": "List group roster. This is the same as group members with the notable exception that devices that are direct members of groups are not returned as such. They are instead returned in the devices of their owner (Person)",
                "operationId": "getGroupRoster",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-groupId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(RosterMember)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "List group roster",
                "tags": [
                    "Group Members"
                ]
            }
        },
        "/groups/{groupId}/shifts": {
            "get": {
                "description": "List shifts",
                "operationId": "getShifts",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-groupId"
                    },
                    {
                        "description": "Filter by status",
                        "enum": [
                            "ACTIVE",
                            "INACTIVE"
                        ],
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/query-embed"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(Shift)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "List shifts",
                "tags": [
                    "Shifts"
                ]
            },
            "post": {
                "description": "Add or update a shift",
                "operationId": "postShift",
                "parameters": [
                    {
                        "description": "The group uuid or targetName",
                        "in": "path",
                        "name": "groupId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ShiftInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Shift"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    },
                    "409": {
                        "$ref": "#/responses/409"
                    }
                },
                "summary": "Add or update a shift",
                "tags": [
                    "Shifts"
                ]
            }
        },
        "/groups/{groupId}/shifts/{shiftId}": {
            "get": {
                "description": "Returns information about a Shift",
                "operationId": "getShift",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-groupId"
                    },
                    {
                        "$ref": "#/parameters/path-shiftId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Shift"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "Returns information about a Shift",
                "tags": [
                    "Shifts"
                ]
            }
        },
        "/groups/{groupId}/shifts/{shiftId}/members": {
            "get": {
                "description": "List Shift members",
                "operationId": "getShiftMembers",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-groupId"
                    },
                    {
                        "$ref": "#/parameters/path-shiftId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(ShiftMember)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "List Shift members",
                "tags": [
                    "Shift Members"
                ]
            },
            "post": {
                "description": "Add or update a shift membership",
                "operationId": "postShiftMember",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-groupId"
                    },
                    {
                        "$ref": "#/parameters/path-shiftId"
                    },
                    {
                        "description": "Shift Member",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ShiftMemberInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ShiftMember"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    },
                    "409": {
                        "$ref": "#/responses/409"
                    }
                },
                "summary": "Add or update a shift membership",
                "tags": [
                    "Shift Members"
                ]
            }
        },
        "/groups/{groupId}/shifts/{shiftId}/occurrences/{occurrenceId}": {
            "get": {
                "summary": "List shift occurrences",
                "description": "List shift occurrences",
                "operationId": "getShiftOccurrences",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-groupId"
                    },
                    {
                        "$ref": "#/parameters/path-shiftId"
                    },
                    {
                        "$ref": "#/parameters/path-occurrenceId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(ShiftOccurrence)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "tags": [
                    "Shift Occurrences"
                ]
            }
        },
        "/groups/{groupId}/shifts/{shiftId}/occurrences/{occurrenceId}/members": {
            "get": {
                "summary": "List shift occurrence members",
                "description": "List shift occurrence members",
                "operationId": "getShiftOccurrenceMembers",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-groupId"
                    },
                    {
                        "$ref": "#/parameters/path-shiftId"
                    },
                    {
                        "$ref": "#/parameters/path-occurrenceId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(ShiftOccurrenceMember)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "tags": [
                    "Shift Occurrences"
                ]
            }
        },
        "/integration-agents": {
            "get": {
                "summary": "Returns information about integration agents",
                "description": "Returns information about integration agents",
                "operationId": "getIntegrationAgents",
                "parameters": [
                    {
                        "description": "ACTIVE or INACTIVE",
                        "enum": [
                            "ACTIVE",
                            "INACTIVE"
                        ],
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/query-offset"
                    },
                    {
                        "$ref": "#/parameters/query-limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(IntegrationAgent)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "tags": [
                    "Integration Agents"
                ]
            },
            "post": {
                "summary": "Update an integration agent",
                "description": "Update an integration agent",
                "operationId": "postIntegrationAgent",
                "parameters": [
                    {
                        "description": "Integration agent update data",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IntegrationAgentInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/IntegrationAgent"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    },
                    "409": {
                        "$ref": "#/responses/409"
                    }
                },
                "tags": [
                    "Integration Agents"
                ]
            }
        },
        "/integration-agents/{integrationAgentId}": {
            "delete": {
                "summary": "Delete an integration agent",
                "description": "Delete an integration agent",
                "operationId": "deleteIntegrationAgent",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-integrationAgentId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IntegrationAgent"
                        }
                    },
                    "204": {
                        "$ref": "#/responses/204"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "409": {
                        "$ref": "#/responses/409"
                    }
                },
                "tags": [
                    "Integration Agents"
                ]
            },
            "get": {
                "summary": "Returns information about an integration agent",
                "description": "Returns information about an integration agent",
                "operationId": "getIntegrationAgent",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-integrationAgentId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IntegrationAgent"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "tags": [
                    "Integration Agents"
                ]
            }
        },
        "/integration-configs": {
            "get": {
                "tags": [
                    "Integration Configs"
                ],
                "summary": "Get integration configurations",
                "description": "Get integration configurations",
                "operationId": "getIntegrationConfigs",
                "parameters": [
                    {
                        "$ref": "#/parameters/query-offset"
                    },
                    {
                        "$ref": "#/parameters/query-limit"
                    },
                    {
                        "$ref": "#/parameters/query-embed"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(IntegrationConfig)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    }
                }
            }
        },
        "/integration-configs/{integrationConfigId}": {
            "get": {
                "tags": [
                    "Integration Configs"
                ],
                "summary": "Get integration configuration",
                "description": "Get integration configuration",
                "operationId": "getIntegrationConfig",
                "parameters": [
                    {
                        "name": "integrationConfigId",
                        "in": "path",
                        "description": "The integration config identifier",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/query-embed"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IntegrationConfig"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            }
        },
        "/integration-configs/{integrationConfigId}/permitted": {
            "get": {
                "tags": [
                    "Integration Configs"
                ],
                "summary": "Get permitted recipients",
                "description": "Get permitted recipients",
                "operationId": "getIntegrationConfigPermitted",
                "parameters": [
                    {
                        "name": "integrationConfigId",
                        "in": "path",
                        "description": "The integration config identifier",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/query-offset"
                    },
                    {
                        "$ref": "#/parameters/query-limit"
                    },
                    {
                        "$ref": "#/parameters/query-embed"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(Recipient)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    }
                }
            },
            "put": {
                "tags": [
                    "Integration Configs"
                ],
                "summary": "Replace permitted recipients",
                "description": "Replace permitted recipients",
                "operationId": "putIntegrationConfigPermitted",
                "parameters": [
                    {
                        "name": "integrationConfigId",
                        "in": "path",
                        "description": "The integration config identifier",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "description": "An array containing permitted recipients",
                            "items": {
                                "$ref": "#/definitions/RecipientPointer"
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    }
                }
            }
        },
        "/on-call": {
            "get": {
                "summary": "On call report",
                "description": "On call report",
                "operationId": "getOnCall",
                "parameters": [
                    {
                        "$ref": "#/parameters/query-at"
                    },
                    {
                        "$ref": "#/parameters/query-embed"
                    },
                    {
                        "$ref": "#/parameters/query-groups"
                    },
                    {
                        "$ref": "#/parameters/query-from"
                    },
                    {
                        "$ref": "#/parameters/query-to"
                    },
                    {
                        "description": "Limit number of shift occurrence members returned",
                        "in": "query",
                        "name": "membersPerShift",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(OnCall)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "tags": [
                    "On Call"
                ]
            }
        },
        "/organization": {
            "get": {
                "summary": "Returns information about the organization",
                "description": "Returns information about the organization",
                "operationId": "getOrganization",
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Organization"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    }
                },
                "tags": [
                    "Organization"
                ]
            }
        },
        "/organization/config": {
            "get": {
                "summary": "Organization configuration",
                "description": "Organization configuration",
                "operationId": "getOrganizationConfig",
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrganizationConfig"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    }
                },
                "tags": [
                    "Organization"
                ]
            }
        },
        "/people": {
            "get": {
                "description": "Returns information about users",
                "operationId": "getPeople",
                "parameters": [
                    {
                        "description": "Case insensitive substring match within firstName, lastName, id, targetName, webLogin, email, phoneNumber. Search terms may be separated by spaces, results are returned that match ANY of the search terms",
                        "in": "query",
                        "name": "search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/query-webLogin"
                    },
                    {
                        "$ref": "#/parameters/query-role"
                    },
                    {
                        "$ref": "#/parameters/query-status"
                    },
                    {
                        "$ref": "#/parameters/query-propertyName"
                    },
                    {
                        "$ref": "#/parameters/query-propertyValue"
                    },
                    {
                        "$ref": "#/parameters/query-offset"
                    },
                    {
                        "$ref": "#/parameters/query-limit"
                    },
                    {
                        "$ref": "#/parameters/query-embed"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(Person)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "Returns information about users",
                "tags": [
                    "People"
                ]
            },
            "post": {
                "description": "Creates a new user",
                "operationId": "postPerson",
                "parameters": [
                    {
                        "description": "An object that describes the new user",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PersonInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/Person"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Person"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "409": {
                        "$ref": "#/responses/409"
                    }
                },
                "summary": "Creates a new user",
                "tags": [
                    "People"
                ]
            }
        },
        "/people/{personId}": {
            "delete": {
                "description": "Deletes a user",
                "operationId": "deletePerson",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-personId"
                    },
                    {
                        "$ref": "#/parameters/query-personIdMatch"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Person"
                        }
                    },
                    "204": {
                        "$ref": "#/responses/204"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "409": {
                        "$ref": "#/responses/409"
                    }
                },
                "summary": "Deletes a user",
                "tags": [
                    "People"
                ]
            },
            "get": {
                "description": "Returns information about a user",
                "operationId": "getPerson",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-personId"
                    },
                    {
                        "$ref": "#/parameters/query-personIdMatch"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Person"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "Returns information about a user",
                "tags": [
                    "People"
                ]
            }
        },
        "/people/{personId}/devices": {
            "get": {
                "description": "Retrieves a list of a user's devices. Use embed=timeframes to include device timeframes in the response",
                "operationId": "getPersonDevices",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-personId"
                    },
                    {
                        "$ref": "#/parameters/query-personIdMatch"
                    },
                    {
                        "$ref": "#/parameters/query-embed"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(Device)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "Retrieves a list of a user's devices",
                "tags": [
                    "Devices"
                ]
            },
            "put": {
                "description": "Set devices. Returns the pagination of the person's devices",
                "operationId": "putPersonDevices",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-personId"
                    },
                    {
                        "$ref": "#/parameters/query-personIdMatch"
                    },
                    {
                        "description": "An array containing the device updates or insertions",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "description": "An array containing the device updates or insertions",
                            "items": {
                                "$ref": "#/definitions/DeviceInput"
                            },
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(Device)"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "409": {
                        "$ref": "#/responses/409"
                    }
                },
                "summary": "Set devices",
                "tags": [
                    "Devices"
                ]
            }
        },
        "/people/{personId}/refresh-tokens": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Returns refresh tokens for a user",
                "description": "Returns refresh tokens for a user",
                "operationId": "getPersonRefreshTokens",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-personId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(RefreshToken)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            }
        },
        "/people/{personId}/refresh-tokens/{tokenId}": {
            "delete": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Invalidates a person's refresh token",
                "description": "Invalidates a person's refresh token",
                "operationId": "deletePersonRefreshToken",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-personId"
                    },
                    {
                        "$ref": "#/parameters/path-tokenId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RefreshToken"
                        }
                    },
                    "204": {
                        "$ref": "#/responses/204"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "409": {
                        "$ref": "#/responses/409"
                    }
                }
            }
        },
        "/people/{personId}/roles": {
            "get": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Retrieves a list of a user's roles",
                "description": "Retrieves a list of a user's roles",
                "operationId": "getPersonRoles",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-personId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(Role)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            }
        },
        "/people/{personId}/functions": {
            "get": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Retrieves a list of a user's functions",
                "description": "Retrieves a list of a user's functions",
                "operationId": "getPersonFunctions",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-personId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(Function)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            }
        },
        "/people/{personId}/permissions": {
            "get": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Retrieves a list of a user's permissions",
                "description": "Retrieves a list of a user's permissions",
                "operationId": "getPersonPermissions",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-personId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(Permission)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            }
        },
        "/people/{personId}/plans": {
            "get": {
                "summary": "Communication plans this person can access",
                "description": "Communication plans this person can access (DEPRECATED use GET /plans?accessibleBy={personId})",
                "operationId": "getPersonPlans",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-personId"
                    },
                    {
                        "$ref": "#/parameters/query-offset"
                    },
                    {
                        "$ref": "#/parameters/query-limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(Plan)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "tags": [
                    "Communication Plans"
                ]
            }
        },
        "/people/{personId}/plans/{planId}": {
            "get": {
                "summary": "Get communication plan",
                "description": "Get communication plan (DEPRECATED use GET /plans/{planId})",
                "operationId": "getPersonPlan",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-personId"
                    },
                    {
                        "$ref": "#/parameters/path-planId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Plan"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "tags": [
                    "Communication Plans"
                ]
            }
        },

        "/plans": {
            "get": {
                "summary": "List communication plans",
                "description": "List communication plans",
                "operationId": "getPlans",
                "parameters": [
                    {
                        "$ref": "#/parameters/query-offset"
                    },
                    {
                        "$ref": "#/parameters/query-limit"
                    },
                    {
                        "description": "Is a custom integration (Has email initiation, or is webservice enabled, or has an inbound, or outbound integration)",
                        "in": "query",
                        "name": "customIntegration",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "description": "Is accessible by specified user",
                        "in": "query",
                        "name": "accessibleBy",
                        "type": "string",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(Plan)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "tags": [
                    "Communication Plans"
                ]
            }
        },
        "/plans/{planId}": {
            "get": {
                "summary": "Get communication plan",
                "description": "Get communication plan",
                "operationId": "getPlan",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-planId"
                    },
                    {
                        "$ref": "#/parameters/query-embed"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Plan"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "tags": [
                    "Communication Plans"
                ]
            }
        },
        "/plans/{planId}/endpoints": {
            "get": {
                "summary": "List plan endpoints",
                "description": "List plan endpoints",
                "operationId": "getPlanEndpoints",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-planId"
                    },
                    {
                        "$ref": "#/parameters/query-offset"
                    },
                    {
                        "$ref": "#/parameters/query-limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(PlanEndpoint)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "tags": [
                    "Communication Plans"
                ]
            },
            "post": {
                "summary": "Add or update plan endpoints",
                "description": "Add or update plan endpoints",
                "operationId": "postPlanEndpoint",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-planId"
                    },
                    {
                        "description": "Plan Endpoint",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PlanEndpointInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PlanEndpoint"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    },
                    "409": {
                        "$ref": "#/responses/409"
                    }
                },
                "tags": [
                    "Communication Plans"
                ]
            }
        },
        "/plans/{planId}/endpoints/{endpointId}": {
            "get": {
                "summary": "Get communication plan endpoint",
                "description": "Get communication plan endpoint",
                "operationId": "getPlanEndpoint",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-planId"
                    },
                    {
                        "$ref": "#/parameters/path-endpointId"
                    },
                    {
                        "$ref": "#/parameters/query-embed"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PlanEndpoint"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "tags": [
                    "Communication Plans"
                ]
            },
            "delete": {
                "summary": "Delete a plan endpoint",
                "description": "Delete a plan endpoint",
                "operationId": "deletePlanEndpoint",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-planId"
                    },
                    {
                        "$ref": "#/parameters/path-endpointId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PlanEndpoint"
                        }
                    },
                    "204": {
                        "$ref": "#/responses/204"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "409": {
                        "$ref": "#/responses/409"
                    }
                },
                "tags": [
                    "Communication Plans"
                ]
            }
        },
        "/plans/{planId}/forms": {
            "get": {
                "description": "List of forms",
                "operationId": "getPlanForms",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-planId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(Form)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "List of forms",
                "tags": [
                    "Communication Plans"
                ]
            }
        },
        "/plans/{planId}/forms/{formId}/scenarios": {
            "get": {
                "description": "List of scenarios",
                "operationId": "getPlanFormScenarios",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-planId"
                    },
                    {
                        "$ref": "#/parameters/path-formId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(Scenario)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "List of scenarios",
                "tags": [
                    "Communication Plans"
                ]
            }
        },
        "/plans/{planId}/forms/{formId}/triggers": {
            "post": {
                "description": "Submit a form (intiates an event)",
                "operationId": "postTrigger",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-planId"
                    },
                    {
                        "$ref": "#/parameters/path-formId"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "409": {
                        "$ref": "#/responses/409"
                    }
                },
                "summary": "Submit a form",
                "tags": [
                    "Communication Plans"
                ]
            }
        },
        "/recipients": {
            "get": {
                "description": "Returns information about potential recipients",
                "operationId": "getRecipients",
                "parameters": [
                    {
                        "description": "Case insensitive substring match within firstName, lastName, id, targetName, webLogin, email, phoneNumber. Search terms may be separated by spaces, results are returned that match ANY of the search terms",
                        "in": "query",
                        "name": "search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "searchType",
                        "in": "query",
                        "name": "searchType",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "CONTAINS",
                            "STARTS_WITH",
                            "ENDS_WITH",
                            "EQUALS"
                        ]
                    },
                    {
                        "description": "recipientType",
                        "in": "query",
                        "name": "recipientType",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "PERSON",
                            "DEVICE",
                            "GROUP"
                        ]
                    },
                    {
                        "$ref": "#/parameters/query-offset"
                    },
                    {
                        "$ref": "#/parameters/query-limit"
                    },
                    {
                        "$ref": "#/parameters/query-embed"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(Recipient)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "Returns information about event recipients",
                "tags": [
                    "Recipients"
                ]
            }
        },
        "/service-providers": {
            "get": {
                "description": "Returns information about configured service providers",
                "operationId": "getServiceProviders",
                "parameters": [
                    {
                        "$ref": "#/parameters/query-offset"
                    },
                    {
                        "$ref": "#/parameters/query-limit"
                    },
                    {
                        "$ref": "#/parameters/query-deviceType"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination(ServiceProvider)"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "Returns information about configured service providers",
                "tags": [
                    "Service Providers"
                ]
            }
        },
        "/sites/{siteId}": {
            "get": {
                "description": "Returns information about a site",
                "operationId": "getSite",
                "parameters": [
                    {
                        "$ref": "#/parameters/path-siteId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Site"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "403": {
                        "$ref": "#/responses/403"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                },
                "summary": "Returns information about a site",
                "tags": [
                    "Sites"
                ]
            }
        },
        "/schedule-this": {
            "post": {
                "summary": "schedule-this messages",
                "description": "schedule-this messages",
                "operationId": "schedule-this",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ScheduleThisMessage"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    }
                },
                "tags": [
                    "Kafka"
                ]
            }
        }
    },
    "definitions": {
        "AccessToken": {
            "description": "Access token response",
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "integer",
                    "description": "Seconds till access_token expiry"
                },
                "token_type": {
                    "type": "string",
                    "enum": ["Bearer"]
                }
            },
            "required": [
                "access_token",
                "expires_in",
                "token_type"
            ]
        },
        "AndroidPushDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/Device"
                }
            ],
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "deviceType": {
                    "enum": [
                        "ANDROID_PUSH"
                    ],
                    "type": "string"
                },
                "registrationId": {
                    "type": "string"
                }
            },
            "required": [
                "registrationId"
            ],
            "type": "object"
        },
        "AndroidPushDeviceInput": {
            "allOf": [
                {
                    "$ref": "#/definitions/DeviceInput"
                }
            ],
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "deviceType": {
                    "enum": [
                        "ANDROID_PUSH"
                    ],
                    "type": "string"
                },
                "registrationId": {
                    "type": "string"
                }
            },
            "required": [
                "accountId",
                "registrationId"
            ],
            "type": "object"
        },
        "ApplePushDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/Device"
                }
            ],
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "alertSound": {
                    "type": "string"
                },
                "apnToken": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "deviceType": {
                    "enum": [
                        "APPLE_PUSH"
                    ],
                    "type": "string"
                },
                "soundStatus": {
                    "type": "string"
                },
                "soundThreshold": {
                    "enum": [
                        "LOW",
                        "MEDIUM",
                        "HIGH"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "accountId",
                "apnToken"
            ],
            "type": "object"
        },
        "ApplePushDeviceInput": {
            "allOf": [
                {
                    "$ref": "#/definitions/DeviceInput"
                }
            ],
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "alertSound": {
                    "type": "string"
                },
                "apnToken": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "deviceType": {
                    "enum": [
                        "APPLE_PUSH"
                    ],
                    "type": "string"
                },
                "soundStatus": {
                    "type": "string"
                },
                "soundThreshold": {
                    "enum": [
                        "LOW",
                        "MEDIUM",
                        "HIGH"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "accountId",
                "apnToken"
            ],
            "type": "object"
        },
        "Audit": {
            "description": "An event audit",
            "properties": {
                "at": {
                    "format": "date-time",
                    "type": "string"
                },
                "event": {
                    "$ref": "#/definitions/EventReference"
                },
                "id": {
                    "description": "A unique identifier for this audit record. Derived from the insert order",
                    "type": "string"
                },
                "notification": {
                    "$ref": "#/definitions/Notification"
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "id",
                "at",
                "type"
            ],
            "type": "object"
        },
        "BadRequestResponse": {
            "properties": {
                "code": {
                    "description": "An application-specific error code",
                    "format": "int32",
                    "type": "integer"
                },
                "message": {
                    "description": "A detailed description of the response or error",
                    "type": "string"
                },
                "reason": {
                    "description": "A description of the response code",
                    "enum": [
                        "Bad Request"
                    ],
                    "type": "string"
                },
                "status": {
                    "description": "The HTTP status code",
                    "enum": [
                        400
                    ],
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "status",
                "reason",
                "message"
            ]
        },
        "BlackberryPushDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/Device"
                }
            ],
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "deviceType": {
                    "enum": [
                        "BLACKBERRY_PUSH"
                    ],
                    "type": "string"
                },
                "registrationId": {
                    "type": "string"
                }
            },
            "required": [
                "accountId",
                "registrationId"
            ],
            "type": "object"
        },
        "BlackberryPushDeviceInput": {
            "allOf": [
                {
                    "$ref": "#/definitions/DeviceInput"
                }
            ],
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "deviceType": {
                    "enum": [
                        "BLACKBERRY_PUSH"
                    ],
                    "type": "string"
                },
                "registrationId": {
                    "type": "string"
                }
            },
            "required": [
                "accountId",
                "registrationId"
            ],
            "type": "object"
        },
        "Callback": {
            "properties": {
                "url": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "status",
                        "deliveryStatus",
                        "response"
                    ],
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "authUserName": {
                    "type": "string"
                },
                "authPassword": {
                    "type": "string"
                },
                "iaId": {
                    "type": "string"
                }
            },
            "required": [
                "url",
                "type"
            ]
        },
        "Credentials": {
            "description": "Authentication credentials",
            "type": "object",
            "properties": {
                "grant_type": {
                    "type": "string",
                    "enum": ["password", "refresh_token"]
                },
                "username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "client_secret": {
                    "type": "string"
                }
            },
            "required": [
                "grant_type",
                "client_id"
            ]
        },
        "Conference": {
            "properties": {
                "bridgeId": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "BRIDGE",
                        "EXTERNAL"
                    ],
                    "type": "string"
                },
                "sid": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "endTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "bridgeId",
                "type"
            ]
        },
        "ConferencePointer": {
            "properties": {
                "bridgeId": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "BRIDGE",
                        "EXTERNAL"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "type"
            ]
        },
        "ConferenceReference": {
            "properties": {
                "bridgeId": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "BRIDGE",
                        "EXTERNAL"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "type",
                "bridgeId"
            ]
        },
        "ConferenceParticipant": {
            "properties": {
                "conference": {
                    "$ref": "#/definitions/ConferenceReference"
                },
                "device": {
                    "$ref": "#/definitions/DeviceReference"
                },
                "member": {
                    "type": "string",
                    "description": "Plivo member"
                },
                "sid": {
                    "type": "string"
                },
                "muted": {
                    "type": "boolean"
                },
                "joined": {
                    "type": "string",
                    "format": "date-time"
                },
                "left": {
                    "type": "string",
                    "format": "date-time"
                },
                "displayName": {
                    "type": "string"
                },
                "extensionInProgress": {
                    "type": "boolean"
                },
                "warnedForExtension": {
                    "type": "string",
                    "format": "date-time"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "willCallToExtend": {
                    "type": "boolean"
                },
                "retries": {
                    "type": "integer"
                }
            },
            "required": [
                "conference"
            ]
        },
        "ConferenceParticipantInput": {
            "properties": {
                "conference": {
                    "$ref": "#/definitions/ConferencePointer"
                },
                "device": {
                    "$ref": "#/definitions/DevicePointer"
                },
                "member": {
                    "type": "string",
                    "description": "Plivo member id"
                },
                "sid": {
                    "type": "string"
                },
                "muted": {
                    "type": "boolean"
                },
                "joined": {
                    "type": "string",
                    "format": "date-time"
                },
                "left": {
                    "type": "string",
                    "format": "date-time"
                },
                "displayName": {
                    "type": "string"
                },
                "extensionInProgress": {
                    "type": "boolean"
                },
                "warnedForExtension": {
                    "type": "string",
                    "format": "date-time"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "willCallToExtend": {
                    "type": "boolean"
                },
                "retries": {
                    "type": "integer"
                }
            },
            "required": [
                "conference"
            ]
        },
        "ConflictResponse": {
            "properties": {
                "code": {
                    "description": "An application-specific error code",
                    "format": "int32",
                    "type": "integer"
                },
                "message": {
                    "description": "A detailed description of the response or error",
                    "type": "string"
                },
                "reason": {
                    "description": "A description of the response status",
                    "enum": [
                        "Conflict"
                    ],
                    "type": "string"
                },
                "status": {
                    "description": "The HTTP status code",
                    "enum": [
                        409
                    ],
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "status",
                "reason",
                "message"
            ]
        },
        "Country": {
            "description": "A country",
            "properties": {
                "code2": {
                    "type": "string"
                },
                "code3": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "code2",
                "code3",
                "name"
            ],
            "type": "object"
        },
        "DeepLink": {
            "type": "object",
            "properties": {
                "token": {
                    "description": "Universally unique token",
                    "type": "string"
                },
                "expiry": {
                    "description": "Expiry date",
                    "type": "string",
                    "format": "date-time"
                },
                "url": {
                    "description": "Link URL",
                    "type": "string"
                },
                "action": {
                    "type": "string"
                },
                "status": {
                    "description": "Status of the token",
                    "type": "string",
                    "enum": [
                        "UNUSED",
                        "USED"
                    ]
                },
                "attributes": {
                    "type": "object"
                }
            },
            "required": [
                "token",
                "expiry",
                "url",
                "action",
                "status"
            ]
        },
        "DeepLinkInput": {
            "type": "object",
            "properties": {
                "expiry": {
                    "description": "Expiry date",
                    "type": "string",
                    "format": "date-time"
                },
                "url": {
                    "description": "Link URL",
                    "type": "string"
                },
                "action": {
                    "type": "string",
                    "description": "Code to be used by URL handler to determine action"
                },
                "status": {
                    "description": "Status of the token",
                    "type": "string",
                    "enum": [
                        "UNUSED",
                        "USED"
                    ]
                },
                "attributes": {
                    "type": "object"
                }
            },
            "required": [
                "expiry",
                "url",
                "action"
            ]
        },
        "Device": {
            "allOf": [
                {
                    "$ref": "#/definitions/Recipient"
                }
            ],
            "description": "A device in xMatters is any means of receiving a notification message. Devices can include physical items like phones, or intangible items such as email accounts",
            "discriminator": "deviceType",
            "properties": {
                "defaultDevice": {
                    "description": "True if this device can receive notifications when the user has no active devices",
                    "type": "boolean"
                },
                "delay": {
                    "description": "The number of minutes to wait for a response before contacting the next device",
                    "format": "int32",
                    "type": "integer"
                },
                "description": {
                    "description": "A description of the device",
                    "type": "string"
                },
                "deviceType": {
                    "$ref": "#/definitions/DeviceType"
                },
                "name": {
                    "description": "The name of the device. Example: Work Email, Home Phone",
                    "type": "string"
                },
                "notifications": {
                    "$ref": "#/definitions/Pagination(Notification)"
                },
                "owner": {
                    "$ref": "#/definitions/PersonReference"
                },
                "priorityThreshold": {
                    "description": "The minimum priority of an event for it to be delivered to this device",
                    "enum": [
                        "LOW",
                        "HIGH",
                        "MEDIUM"
                    ],
                    "type": "string"
                },
                "provider": {
                    "$ref": "#/definitions/ProviderReference"
                },
                "recipientType": {
                    "enum": [
                        "DEVICE"
                    ],
                    "type": "string"
                },
                "sequence": {
                    "description": "The order in which the device will be contacted, where 0 represents the first device contacted",
                    "format": "int32",
                    "type": "integer"
                },
                "testStatus": {
                    "description": "Whether the device has been tested",
                    "enum": [
                        "TESTED",
                        "UNTESTED",
                        "PENDING",
                        "INVALID"
                    ],
                    "type": "string"
                },
                "timeframes": {
                    "$ref": "#/definitions/Pagination(DeviceTimeframe)"
                }
            },
            "required": [
                "owner",
                "deviceType"
            ],
            "type": "object"
        },
        "DeviceInput": {
            "allOf": [
                {
                    "$ref": "#/definitions/RecipientInput"
                }
            ],
            "description": "A device in xMatters is any means of receiving a notification message. Devices can include physical items like phones, or intangible items such as email accounts",
            "discriminator": "deviceType",
            "properties": {
                "defaultDevice": {
                    "description": "True if this device can receive notifications when the user has no active devices. a.k.a. Fail-safe device",
                    "type": "boolean"
                },
                "delay": {
                    "description": "The number of minutes to wait for a response before contacting the next device",
                    "format": "int32",
                    "type": "integer"
                },
                "deviceType": {
                    "$ref": "#/definitions/DeviceType"
                },
                "name": {
                    "description": "The name of the device. Example: Work Email, Home Phone",
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/PersonPointer"
                },
                "priorityThreshold": {
                    "description": "The minimum priority of an event for it to be delivered to this device",
                    "enum": [
                        "LOW",
                        "HIGH",
                        "MEDIUM"
                    ],
                    "type": "string"
                },
                "provider": {
                    "$ref": "#/definitions/ServiceProviderPointer"
                },
                "recipientType": {
                    "enum": [
                        "DEVICE"
                    ],
                    "type": "string"
                },
                "sequence": {
                    "description": "The order in which the device will be contacted, where 0 represents the first device contacted",
                    "format": "int32",
                    "type": "integer"
                },
                "testStatus": {
                    "description": "Whether the device has been tested",
                    "enum": [
                        "TESTED",
                        "UNTESTED",
                        "PENDING",
                        "INVALID"
                    ],
                    "type": "string"
                },
                "timeframes": {
                    "description": "Timeframes when this device is active",
                    "items": {
                        "$ref": "#/definitions/DeviceTimeframeInput"
                    },
                    "type": "array"
                }
            },
            "required": [
                "deviceType",
                "name",
                "owner"
            ],
            "type": "object"
        },
        "DevicePointer": {
            "description": "A pointer to a device",
            "properties": {
                "id": {
                    "description": "The identifier of the resource",
                    "type": "string"
                },
                "targetName": {
                    "description": "The target name of the resource",
                    "type": "string"
                }
            }
        },
        "DeviceName": {
            "properties": {
                "deviceType": {
                    "$ref": "#/definitions/DeviceType"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "domains": {
                    "type": "string"
                }
            },
            "required": [
                "deviceType",
                "name",
                "description"
            ],
            "type": "object"
        },
        "DeviceReference": {
            "properties": {
                "deviceType": {
                    "$ref": "#/definitions/DeviceType"
                },
                "id": {
                    "description": "The identifier of the resource",
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ReferenceLink"
                },
                "targetName": {
                    "description": "The target name of the resource",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "targetName",
                "deviceType",
                "links"
            ]
        },
        "DeviceTimeframe": {
            "description": "The timeframe in which a device is available to receive notifications",
            "properties": {
                "days": {
                    "description": "List of the days of the week this timeframe is active",
                    "items": {
                        "enum": [
                            "SU",
                            "MO",
                            "TU",
                            "WE",
                            "TH",
                            "FR",
                            "SA"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "durationInMinutes": {
                    "description": "The length of the timeframe in minutes",
                    "format": "int32",
                    "type": "integer"
                },
                "excludeHolidays": {
                    "description": "True if the timeframe is not active on holidays",
                    "type": "boolean"
                },
                "name": {
                    "description": "Name of the Timeframe. Example: \"After hours\"",
                    "type": "string"
                },
                "startTime": {
                    "description": "The time of day that the timeframe begins, in the device owners timezone",
                    "type": "string"
                },
                "timezone": {
                    "description": "The time zone of the device owner. Example:  US/Pacific",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "startTime",
                "durationInMinutes",
                "excludeHolidays"
            ]
        },
        "DeviceTimeframeInput": {
            "description": "The timeframe in which a device is available to receive notifications",
            "properties": {
                "days": {
                    "description": "List of the days of the week this timeframe is active",
                    "items": {
                        "enum": [
                            "SU",
                            "MO",
                            "TU",
                            "WE",
                            "TH",
                            "FR",
                            "SA"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "durationInMinutes": {
                    "description": "The length of the timeframe in minutes",
                    "format": "int32",
                    "type": "integer"
                },
                "excludeHolidays": {
                    "description": "True if the timeframe is not active on holidays",
                    "type": "boolean"
                },
                "name": {
                    "description": "Name of the Timeframe. Example: \"After hours\"",
                    "type": "string"
                },
                "startTime": {
                    "description": "The time of day that the timeframe begins, in the device owners timezone",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "startTime",
                "durationInMinutes",
                "excludeHolidays"
            ]
        },
        "DeviceType": {
            "description": "The type of device",
            "enum": [
                "ANDROID_PUSH",
                "APPLE_PUSH",
                "BLACKBERRY_PUSH",
                "BROWSER",
                "EMAIL",
                "FAX",
                "GENERIC",
                "IM",
                "NUMERIC_PAGER",
                "TEXT_PAGER",
                "TEXT_PHONE",
                "VOICE",
                "VOICE_IVR"
            ],
            "type": "string"
        },
        "Domain": {
            "description": "An email domain restriction",
            "properties": {
                "domain": {
                    "type": "string"
                }
            },
            "required": [
                "domain"
            ],
            "type": "object"
        },
        "EmailDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/Device"
                }
            ],
            "properties": {
                "deviceType": {
                    "enum": [
                        "EMAIL"
                    ],
                    "type": "string"
                },
                "emailAddress": {
                    "type": "string"
                }
            },
            "required": [
                "emailAddress"
            ],
            "type": "object"
        },
        "EmailDeviceInput": {
            "allOf": [
                {
                    "$ref": "#/definitions/DeviceInput"
                }
            ],
            "properties": {
                "deviceType": {
                    "enum": [
                        "EMAIL"
                    ],
                    "type": "string"
                },
                "emailAddress": {
                    "type": "string"
                }
            },
            "required": [
                "emailAddress"
            ],
            "type": "object"
        },
        "Event": {
            "description": "Returns an event in the xMatters system",
            "properties": {
                "id": {
                    "description": "An identifier (UUID) that represents this resource",
                    "type": "string"
                },
                "eventId": {
                    "description": "A legacy identifier (numeric) that represents this resource",
                    "type": "string"
                },
                "bypassPhoneIntro": {
                    "type": "boolean"
                },
                "conference": {
                    "$ref": "#/definitions/Conference"
                },
                "created": {
                    "format": "date-time",
                    "type": "string"
                },
                "escalationOverride": {
                    "type": "boolean"
                },
                "expirationInMinutes": {
                    "type": "integer"
                },
                "terminated": {
                    "format": "date-time",
                    "type": "string"
                },
                "form": {
                    "$ref": "#/definitions/FormReference"
                },
                "incident": {
                    "type": "string"
                },
                "otherResponseCount": {
                    "type": "integer"
                },
                "overrideDeviceRestrictions": {
                    "default": false,
                    "type": "boolean"
                },
                "priority": {
                    "enum": [
                        "LOW",
                        "MEDIUM",
                        "HIGH"
                    ],
                    "type": "string"
                },
                "properties": {
                    "description": "Map of property names and values",
                    "type": "object"
                },
                "recipients": {
                    "$ref": "#/definitions/Pagination(Recipient)"
                },
                "requestId": {
                    "type": "string"
                },
                "requirePhonePassword": {
                    "type": "boolean"
                },
                "responseCountsEnabled": {
                    "default": false,
                    "type": "boolean"
                },
                "responseOptions": {
                    "$ref": "#/definitions/Pagination(ResponseOption)"
                },
                "senderOverrides": {
                    "$ref": "#/definitions/SenderOverrides"
                },
                "status": {
                    "enum": [
                        "ACTIVE",
                        "SUSPENDED",
                        "TERMINATED"
                    ],
                    "type": "string"
                },
                "submitter": {
                    "$ref": "#/definitions/PersonReference"
                },
                "voicemailOptions": {
                    "$ref": "#/definitions/VoicemailOptions"
                }
            },
            "required": [
                "id",
                "eventId",
                "created",
                "status",
                "priority",
                "form"
            ],
            "type": "object"
        },
        "EventInput": {
            "description": "A form submission",
            "properties": {
                "id": {
                    "description": "An identifier (UUID) that represents this resource",
                    "type": "string"
                },
                "bypassPhoneIntro": {
                    "default": false,
                    "type": "boolean"
                },
                "callbacks": {
                    "items": {
                        "$ref": "#/definitions/Callback"
                    },
                    "type": "array"
                },
                "conference": {
                    "$ref": "#/definitions/ConferencePointer"
                },
                "escalationOverride": {
                    "default": false,
                    "type": "boolean"
                },
                "expirationInMinutes": {
                    "type": "integer"
                },
                "form": {
                    "$ref": "#/definitions/FormPointer"
                },
                "incident": {
                    "type": "string"
                },
                "integration": {
                    "$ref": "#/definitions/IntegrationPointer"
                },
                "otherResponseCount": {
                    "type": "integer"
                },
                "overrideDeviceRestrictions": {
                    "default": false,
                    "type": "boolean"
                },
                "priority": {
                    "enum": [
                        "LOW",
                        "MEDIUM",
                        "HIGH"
                    ],
                    "type": "string"
                },
                "properties": {
                    "description": "Map of property names and values",
                    "type": "object"
                },
                "recipients": {
                    "description": "Note: required if pre-configured recipients do not exist",
                    "items": {
                        "$ref": "#/definitions/RecipientPointer"
                    },
                    "type": "array"
                },
                "requestId": {
                    "type": "string"
                },
                "requirePhonePassword": {
                    "default": false,
                    "type": "boolean"
                },
                "responseOptions": {
                    "description": "A list of the response options to be displayed for the event. Response options are identified by a Universally Unique Identifier (UUID)",
                    "items": {
                        "$ref": "#/definitions/ResponseOption"
                    },
                    "type": "array"
                },
                "senderOverrides": {
                    "$ref": "#/definitions/SenderOverrides"
                },
                "status": {
                    "enum": [
                        "ACTIVE",
                        "SUSPENDED",
                        "TERMINATED"
                    ],
                    "type": "string"
                },
                "voicemailOptions": {
                    "$ref": "#/definitions/VoicemailOptions"
                }
            },
            "required": [
                "form"
            ],
            "type": "object"
        },
        "EventReference": {
            "properties": {
                "id": {
                    "description": "An identifier (UUID) that represents this resource",
                    "type": "string"
                },
                "eventId": {
                    "description": "A legacy identifier (numeric) that represents this resource",
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ReferenceLink"
                }
            },
            "required": [
                "id",
                "links"
            ]
        },
        "FaxDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/Device"
                }
            ],
            "properties": {
                "country": {
                    "enum": [
                        "AR",
                        "AU",
                        "BR",
                        "CA",
                        "FR",
                        "DE",
                        "HK",
                        "IN",
                        "IT",
                        "JP",
                        "PT",
                        "PR",
                        "GB",
                        "US"
                    ],
                    "type": "string"
                },
                "deviceType": {
                    "enum": [
                        "FAX"
                    ],
                    "type": "string"
                },
                "phoneNumber": {
                    "pattern": "^\\d{5,20}$",
                    "type": "string"
                }
            },
            "required": [
                "phoneNumber"
            ],
            "type": "object"
        },
        "FaxDeviceInput": {
            "allOf": [
                {
                    "$ref": "#/definitions/DeviceInput"
                }
            ],
            "properties": {
                "country": {
                    "enum": [
                        "AR",
                        "AU",
                        "BR",
                        "CA",
                        "FR",
                        "DE",
                        "HK",
                        "IN",
                        "IT",
                        "JP",
                        "PT",
                        "PR",
                        "GB",
                        "US"
                    ],
                    "type": "string"
                },
                "deviceType": {
                    "enum": [
                        "FAX"
                    ],
                    "type": "string"
                },
                "phoneNumber": {
                    "pattern": "^\\d{5,20}$",
                    "type": "string"
                }
            },
            "required": [
                "phoneNumber"
            ],
            "type": "object"
        },
        "FeatureToggle": {
            "description": "Feature toggle",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": ["string", "number", "boolean"]
                }
            },
            "required": [
                "name",
                "value"
            ]
        },
        "ForbiddenResponse": {
            "properties": {
                "code": {
                    "description": "An application-specific error code",
                    "format": "int32",
                    "type": "integer"
                },
                "message": {
                    "description": "A detailed description of the response or error",
                    "type": "string"
                },
                "reason": {
                    "description": "A description of the response code",
                    "enum": [
                        "Forbidden"
                    ],
                    "type": "string"
                },
                "status": {
                    "description": "The HTTP status code",
                    "enum": [
                        403
                    ],
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "status",
                "reason",
                "message"
            ]
        },
        "Form": {
            "description": "A form",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "senderOverrides": {
                    "type": "object"
                },
                "status": {
                    "type": "string"
                },
                "recipients": {
                    "$ref": "#/definitions/Pagination(Recipient)"
                },
                "links": {
                    "$ref": "#/definitions/ReferenceLink"
                }
            },
            "required": [
                "id",
                "name",
                "description",
                "status"
            ],
            "type": "object"
        },
        "FormInput": {
            "description": "A form",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "senderOverrides": {
                    "type": "object"
                },
                "recipients": {
                    "description": "Pre-configured recipients",
                    "items": {
                        "$ref": "#/definitions/RecipientPointer"
                    },
                    "type": "array"
                }
            },
            "required": [
                "name",
                "description"
            ],
            "type": "object"
        },
        "FormPointer": {
            "description": "A reference to a form resource",
            "properties": {
                "id": {
                    "description": "The identifier of the resource",
                    "type": "string"
                }
            }
        },
        "FormReference": {
            "properties": {
                "id": {
                    "description": "The identifier of the resource",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "Function": {
            "description": "Function",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "functions": {
                    "$ref": "#/definitions/Pagination(Permission)"
                }
            },
            "required": [
                "id"
            ]
        },
        "GenericDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/Device"
                }
            ],
            "properties": {
                "deviceType": {
                    "enum": [
                        "GENERIC"
                    ],
                    "type": "string"
                },
                "pin": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GenericDeviceInput": {
            "allOf": [
                {
                    "$ref": "#/definitions/DeviceInput"
                }
            ],
            "properties": {
                "deviceType": {
                    "enum": [
                        "GENERIC"
                    ],
                    "type": "string"
                },
                "pin": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Group": {
            "allOf": [
                {
                    "$ref": "#/definitions/Recipient"
                }
            ],
            "description": "Groups are used for collecting users and devices and organizing them into notification schedules",
            "properties": {
                "allowDuplicates": {
                    "type": "boolean"
                },
                "calendar": {
                    "$ref": "#/definitions/Pagination(ShiftOccurrence)"
                },
                "description": {
                    "type": "string"
                },
                "observedByAll": {
                    "type": "boolean"
                },
                "recipientType": {
                    "description": "A description of the group",
                    "enum": [
                        "GROUP"
                    ],
                    "type": "string"
                },
                "site": {
                    "$ref": "#/definitions/SiteReference"
                },
                "supervisors": {
                    "$ref": "#/definitions/Pagination(Person)"
                },
                "useDefaultDevices": {
                    "type": "boolean"
                }
            },
            "required": [
                "allowDuplicates",
                "observedByAll",
                "useDefaultDevices"
            ],
            "type": "object"
        },
        "GroupInput": {
            "allOf": [
                {
                    "$ref": "#/definitions/RecipientInput"
                }
            ],
            "description": "Groups are used for collecting users and devices and organizing them into notification schedules",
            "properties": {
                "allowDuplicates": {
                    "description": "Whether the group allows a notification to be sent to a device multiple times",
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "observedByAll": {
                    "description": "Whether the group notifications are observed by all",
                    "type": "boolean"
                },
                "recipientType": {
                    "enum": [
                        "GROUP"
                    ],
                    "type": "string"
                },
                "site": {
                    "$ref": "#/definitions/SitePointer"
                },
                "supervisors": {
                    "description": "A list of group supervisors. Groups must have at least one supervisor",
                    "items": {
                        "$ref": "#/definitions/PersonPointer"
                    },
                    "type": "array"
                },
                "timezone": {
                    "type": "string"
                },
                "useDefaultDevices": {
                    "description": "Whether the default user device should be used when sending out a notification to the group",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GroupMember": {
            "properties": {
                "group": {
                    "$ref": "#/definitions/GroupReference"
                },
                "member": {
                    "$ref": "#/definitions/RecipientReference"
                },
                "shifts": {
                    "$ref": "#/definitions/Pagination(Shift)"
                }
            },
            "required": [
                "group",
                "member"
            ]
        },
        "GroupReference": {
            "properties": {
                "id": {
                    "description": "The identifier of the resource",
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ReferenceLink"
                },
                "targetName": {
                    "description": "The target name of the resource",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "targetName",
                "links"
            ]
        },
        "Hierarchy": {
            "description": "Hierarchy",
            "items": {
                "$ref": "#/definitions/HierarchyItem"
            },
            "type": "array"
        },
        "HierarchyItem": {
            "description": "Hierarchy item",
            "properties": {
                "category": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "IntegrationAgent": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "agentId": {
                    "type": "string",
                    "description": "Legacy non-UUID identifier"
                },
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "CONNECTED",
                        "DISCONNECTED"
                    ]
                },
                "statusAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "os": {
                    "type": "string"
                }
            },
            "required": [
                "id",
                "version",
                "url",
                "status",
                "statusAt",
                "os"
            ],
            "type": "object"
        },
        "IntegrationAgentInput": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "IntegrationConfig": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "accessibleByAll": {
                    "type": "boolean"
                },
                "creator": {
                    "$ref": "#/definitions/PersonReference"
                },
                "permitted": {
                    "$ref": "#/definitions/Pagination(Recipient)"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "IntegrationPointer": {
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "IMDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/Device"
                }
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "deviceType": {
                    "enum": [
                        "IM"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "address"
            ],
            "type": "object"
        },
        "IMDeviceInput": {
            "allOf": [
                {
                    "$ref": "#/definitions/DeviceInput"
                }
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "deviceType": {
                    "enum": [
                        "IM"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "address"
            ],
            "type": "object"
        },
        "Mobile": {
            "description": "The Web UI Application",
            "properties": {
                "notifications": {
                    "$ref": "#/definitions/Pagination(Notification)"
                }
            },
            "type": "object"
        },
        "NotFoundResponse": {
            "properties": {
                "code": {
                    "description": "An application-specific error code",
                    "format": "int32",
                    "type": "integer"
                },
                "message": {
                    "description": "A detailed description of the response or error",
                    "type": "string"
                },
                "reason": {
                    "description": "A description of the response code",
                    "enum": [
                        "Not Found"
                    ],
                    "type": "string"
                },
                "status": {
                    "description": "The HTTP status code",
                    "enum": [
                        404
                    ],
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "status",
                "reason",
                "message"
            ]
        },
        "Notification": {
            "description": "A notification",
            "properties": {
                "id": {
                    "type": "string"
                },
                "event": {
                    "$ref": "#/definitions/EventReference"
                },
                "recipient": {
                    "$ref": "#/definitions/RecipientReference"
                },
                "category": {
                    "type": "string"
                },
                "created": {
                    "format": "date-time",
                    "type": "string"
                },
                "deliveryStatus": {
                    "type": "string"
                },
                "responses": {
                    "$ref": "#/definitions/Pagination(Response)"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "NotificationReference": {
            "properties": {
                "id": {
                    "description": "The identifier of the resource",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "NumericPagerDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/Device"
                }
            ],
            "properties": {
                "areaCode": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "deviceType": {
                    "enum": [
                        "NUMERIC_PAGER"
                    ],
                    "type": "string"
                },
                "pagerNumber": {
                    "type": "string"
                },
                "pin": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NumericPagerDeviceInput": {
            "allOf": [
                {
                    "$ref": "#/definitions/DeviceInput"
                }
            ],
            "properties": {
                "areaCode": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "deviceType": {
                    "enum": [
                        "NUMERIC_PAGER"
                    ],
                    "type": "string"
                },
                "pagerNumber": {
                    "type": "string"
                },
                "pin": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OnCall": {
            "properties": {
                "group": {
                    "$ref": "#/definitions/GroupReference"
                },
                "shift": {
                    "$ref": "#/definitions/ShiftReference"
                },
                "start": {
                    "format": "date-time",
                    "type": "string"
                },
                "end": {
                    "format": "date-time",
                    "type": "string"
                },
                "members": {
                    "$ref": "#/definitions/Pagination(ShiftOccurrenceMember)"
                }
            },
            "required": [
                "group"
            ]
        },
        "Organization": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Organization UUID. Used as partition key"
                },
                "trial": {
                    "type": "boolean",
                    "description": "True if this is a trial organization"
                }
            },
            "required": [
                "id",
                "trial"
            ]
        },
        "OrganizationInput": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Organization UUID. Used as partition key"
                },
                "trial": {
                    "type": "boolean",
                    "description": "True if this is a trial organization"
                }
            }
        },
        "OrganizationPointer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Organization UUID. Used as partition key"
                }
            },
            "required": [
                "id"
            ]
        },
        "OrganizationConfig": {
            "type": "object"
        },
        "Person": {
            "allOf": [
                {
                    "$ref": "#/definitions/Recipient"
                }
            ],
            "description": "Someone in the xMatters system who can receive notifications is called a 'Person'. Every person in the xMatters system is a user defined by a set of details, including ID number, user name, login password, and so on",
            "properties": {
                "firstName": {
                    "description": "The first name of the user",
                    "type": "string"
                },
                "language": {
                    "description": "The preferred language of the user: Example: en",
                    "type": "string"
                },
                "lastName": {
                    "description": "The last name of the user",
                    "type": "string"
                },
                "phoneLogin": {
                    "description": "A numeric string that identifies users when they phone in to xMatters. This string may contain only digits and must be unique within the company",
                    "type": "string"
                },
                "recipientType": {
                    "enum": [
                        "PERSON"
                    ],
                    "type": "string"
                },
                "timezone": {
                    "description": "The time zone of the user. Example:  US/Pacific",
                    "type": "string"
                },
                "webLogin": {
                    "description": "The ID of the user when they log on to the web user interface. This value must be unique within the company and is often identical to the targetName field",
                    "type": "string"
                },
                "deliveryStatus": {
                    "description": "Delivery status",
                    "type": "string",
                    "enum": [
                        "PENDING",
                        "DELIVERED",
                        "RESPONDED",
                        "FAILED"
                    ]
                },
                "properties": {
                    "description": "Key/Value map of custom properties",
                    "type": "object"
                },
                "response": {
                    "$ref": "#/definitions/Response"
                },
                "site": {
                    "$ref": "#/definitions/SiteReference"
                },
                "notifications": {
                    "$ref": "#/definitions/Pagination(Notification)"
                },
                "devices": {
                    "$ref": "#/definitions/Pagination(Device)"
                },
                "roles": {
                    "$ref": "#/definitions/Pagination(Role)"
                }
            },
            "required": [
                "firstName",
                "lastName"
            ],
            "type": "object"
        },
        "PersonInput": {
            "allOf": [
                {
                    "$ref": "#/definitions/RecipientInput"
                }
            ],
            "description": "Someone in the xMatters system who can receive notifications is called a 'Person'. Every person in the xMatters system is a user defined by a set of details, including ID number, user name, login password, and so on",
            "properties": {
                "firstName": {
                    "description": "The first name of the user",
                    "type": "string"
                },
                "language": {
                    "description": "The preferred language of the user: Example: en",
                    "type": "string"
                },
                "lastName": {
                    "description": "The last name of the user",
                    "type": "string"
                },
                "phoneLogin": {
                    "description": "A numeric string that identifies users when they phone in to xMatters. This string may contain only digits and must be unique within the company",
                    "type": "string"
                },
                "properties": {
                    "description": "Key/Value map of custom properties",
                    "type": "object"
                },
                "recipientType": {
                    "enum": [
                        "PERSON"
                    ],
                    "type": "string"
                },
                "roles": {
                    "description": "A list of the user's roles. Users must have at least one role",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "site": {
                    "$ref": "#/definitions/SitePointer"
                },
                "supervisors": {
                    "description": "A list of supervisors of this users. If this value is not provided, the XXX user becomes the supervisor. To assign a user as a supervisor, the authenticating user must have the appropriate permissions",
                    "items": {
                        "$ref": "#/definitions/PersonPointer"
                    },
                    "type": "array"
                },
                "timezone": {
                    "description": "The time zone of the user. Example:  US/Pacific",
                    "type": "string"
                },
                "webLogin": {
                    "description": "The ID of the user when they log on to the web user interface. This value must be unique within the company and is often identical to the targetName field",
                    "type": "string"
                }
            },
            "required": [
                "firstName",
                "lastName",
                "language",
                "timezone",
                "webLogin",
                "roles"
            ],
            "type": "object"
        },
        "PersonPointer": {
            "description": "A reference to a person resource",
            "properties": {
                "id": {
                    "description": "The identifier of the resource",
                    "type": "string"
                }
            }
        },
        "PersonReference": {
            "properties": {
                "id": {
                    "description": "The identifier of the resource",
                    "type": "string"
                },
                "targetName": {
                    "description": "The target name of the resource",
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ReferenceLink"
                }
            },
            "required": [
                "id",
                "targetName",
                "links"
            ]
        },
        "Permission": {
            "description": "Permission",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "Plan": {
            "description": "A communication plan",
            "properties": {
                "id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "forms": {
                    "$ref": "#/definitions/Pagination(Form)"
                },
                "endpoints": {
                    "$ref": "#/definitions/Pagination(PlanEndpoint)"
                },
                "links": {
                    "$ref": "#/definitions/ReferenceLink"
                }
            },
            "required": [
                "id",
                "name",
                "description",
                "status",
                "enabled"
            ],
            "type": "object"
        },
        "PlanInput": {
            "description": "A communication plan",
            "properties": {
                "id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "description"
            ],
            "type": "object"
        },
        "PlanReference": {
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "PlanPointer": {
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "PlanEndpoint": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "plan": {
                    "$ref": "#/definitions/PlanReference"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "endpointType": {
                    "type": "string",
                    "enum": [
                        "NO_AUTH",
                        "BASIC",
                        "OAUTH2",
                        "OAUTH2_FORCE",
                        "OAUTH_SLACK"
                    ]
                },
                "authenticationType": {
                    "type": "string",
                    "enum": [
                        "XMATTERS",
                        "EXTERNAL",
                        "XM_FORM"
                    ]
                }
            },
            "required": [
                "id",
                "plan",
                "name"
            ],
            "type": "object"
        },
        "PlanEndpointInput": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "plan": {
                    "$ref": "#/definitions/PlanPointer"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "endpointType": {
                    "type": "string",
                    "enum": [
                        "NO_AUTH",
                        "BASIC",
                        "OAUTH2",
                        "OAUTH2_FORCE",
                        "OAUTH_SLACK"
                    ]
                },
                "authenticationType": {
                    "type": "string",
                    "enum": [
                        "XMATTERS",
                        "EXTERNAL",
                        "XM_FORM"
                    ]
                }
            },
            "type": "object"
        },
        "ProviderReference": {
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "PublicAddressDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/Device"
                }
            ],
            "description": "a.k.a. Voice IVR",
            "properties": {
                "deviceType": {
                    "enum": [
                        "VOICE_IVR"
                    ],
                    "type": "string"
                },
                "phoneNumber": {
                    "description": "E.164 international format phone number including +, country code, and extension",
                    "type": "string"
                }
            },
            "required": [
                "phoneNumber"
            ],
            "type": "object"
        },
        "PublicAddressDeviceInput": {
            "allOf": [
                {
                    "$ref": "#/definitions/DeviceInput"
                }
            ],
            "description": "a.k.a. Voice IVR",
            "properties": {
                "deviceType": {
                    "enum": [
                        "VOICE_IVR"
                    ],
                    "type": "string"
                },
                "phoneNumber": {
                    "description": "E.164 international format phone number including country code and extension",
                    "type": "string"
                }
            },
            "required": [
                "phoneNumber"
            ],
            "type": "object"
        },
        "Recipient": {
            "type": "object",
            "discriminator": "recipientType",
            "properties": {
                "id": {
                    "description": "An identifier (UUID) that represents this resource",
                    "type": "string"
                },
                "targetName": {
                    "description": "An identifier such as a name that can be used to identify a resource",
                    "type": "string"
                },
                "recipientType": {
                    "enum": [
                        "PERSON",
                        "DEVICE",
                        "GROUP",
                        "DYNAMIC_TEAM",
                        "SITE",
                        "ROLE"
                    ],
                    "type": "string"
                },
                "status": {
                    "description": "Whether the recipient is active. Inactive recipients do not receive notifications",
                    "enum": [
                        "ACTIVE",
                        "INACTIVE",
                        "INVALID"
                    ],
                    "type": "string"
                },
                "externalKey": {
                    "description": "Identifies this resource in an external system. Used when externallyOwned is true",
                    "type": "string"
                },
                "externallyOwned": {
                    "description": "True if this resource is managed by an external system. Externally-owned resources cannot be deleted in the xMatters user interface",
                    "type": "boolean"
                },
                "targeted": {
                    "description": "Indicates if this is a targeted recipient. If omitted assume false",
                    "type": "string"
                },
                "locked": {
                    "description": "Lists the fields of externally-owned objects that are locked and cannot be modified in the xMatters user interface",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "responseCount": {
                    "description": "Number of responses required before xMatters stops notifying targeted group or dynamic team",
                    "type": "integer",
                    "minimum": 1
                },
                "links": {
                    "$ref": "#/definitions/ReferenceLink"
                }
            },
            "required": [
                "id",
                "targetName",
                "recipientType",
                "externallyOwned",
                "status"
            ]
        },
        "RecipientInput": {
            "type": "object",
            "description": "A Recipient can be the target of a notification. Groups, People and Devices are all Recipients",
            "discriminator": "recipientType",
            "properties": {
                "id": {
                    "description": "The unique identifier",
                    "type": "string"
                },
                "targetName": {
                    "type": "string"
                },
                "recipientType": {
                    "enum": [
                        "GROUP",
                        "PERSON",
                        "DEVICE",
                        "DYNAMIC_TEAM",
                        "SITE",
                        "ROLE"
                    ],
                    "type": "string"
                },
                "status": {
                    "default": "ACTIVE",
                    "enum": [
                        "ACTIVE",
                        "INACTIVE"
                    ],
                    "type": "string"
                },
                "externalKey": {
                    "type": "string"
                },
                "externallyOwned": {
                    "type": "boolean"
                },
                "responseCount": {
                    "description": "Number of responses required before xMatters stops notifying targeted group or dynamic team",
                    "type": "integer",
                    "minimum": 1
                }
            },
            "required": [
                "recipientType",
                "targetName"
            ]
        },
        "RecipientPointer": {
            "description": "A reference to a recipient resource",
            "properties": {
                "id": {
                    "description": "The identifier of the resource. Can be either UUID or targetName",
                    "type": "string"
                },
                "recipientType": {
                    "enum": [
                        "GROUP",
                        "PERSON",
                        "DEVICE",
                        "SITE",
                        "ROLE"
                    ],
                    "type": "string"
                },
                "responseCount": {
                    "description": "Number of responses required before xMatters stops notifying targeted group or dynamic team",
                    "type": "integer",
                    "minimum": 1
                }
            },
            "required": [
                "id"
            ]
        },
        "RecipientReference": {
            "properties": {
                "id": {
                    "description": "The identifier of the resource",
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ReferenceLink"
                },
                "recipientType": {
                    "enum": [
                        "GROUP",
                        "PERSON",
                        "DEVICE",
                        "SITE",
                        "ROLE"
                    ],
                    "type": "string"
                },
                "targetName": {
                    "description": "The target name of the resource",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "targetName",
                "recipientType",
                "links"
            ]
        },
        "ReferenceLink": {
            "properties": {
                "self": {
                    "description": "A link to this resource",
                    "type": "string"
                }
            },
            "required": [
                "self"
            ]
        },
        "RefreshToken": {
            "description": "Refresh token response",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "refresh_token"
            ]
        },
        "Response": {
            "type": "object",
            "description": "A response",
            "properties": {
                "text": {
                    "type": "string"
                },
                "notification": {
                    "$ref": "#/definitions/NotificationReference"
                },
                "option": {
                    "$ref": "#/definitions/ResponseOption"
                },
                "received": {
                    "type": "string",
                    "format": "date-time"
                },
                "source": {
                    "type": "string",
                    "enum": [
                        "BROWSER",
                        "MOBILE"
                    ]
                }
            },
            "required": [
                "text",
                "notification"
            ]
        },
        "ResponseOption": {
            "type": "object",
            "description": "A response option",
            "properties": {
                "action": {
                    "type": "string"
                },
                "contribution": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "number": {
                    "format": "int32",
                    "type": "integer"
                },
                "prompt": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            },
            "required": [
                "number",
                "text",
                "description",
                "prompt"
            ]
        },
        "Role": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Recipient"
                }
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Unique name. Also alias for targetName"
                },
                "functions": {
                    "$ref": "#/definitions/Pagination(Function)"
                }
            },
            "required": [
                "name"
            ]
        },
        "RoleReference": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name. Also alias for targetName"
                }
            },
            "required": [
                "id",
                "name"
            ]
        },
        "RolePointer": {
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "RosterMember": {
            "properties": {
                "group": {
                    "$ref": "#/definitions/GroupReference"
                },
                "member": {
                    "$ref": "#/definitions/Recipient"
                }
            },
            "required": [
                "group",
                "member"
            ]
        },
        "SMSDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/Device"
                }
            ],
            "properties": {
                "deviceType": {
                    "enum": [
                        "TEXT_PHONE"
                    ],
                    "type": "string"
                },
                "phoneNumber": {
                    "description": "E.164 international format phone number including + and country code",
                    "type": "string"
                }
            },
            "required": [
                "phoneNumber"
            ],
            "type": "object"
        },
        "SMSDeviceInput": {
            "allOf": [
                {
                    "$ref": "#/definitions/DeviceInput"
                }
            ],
            "properties": {
                "deviceType": {
                    "enum": [
                        "TEXT_PHONE"
                    ],
                    "type": "string"
                },
                "phoneNumber": {
                    "description": "E.164 international format phone number including country code and extension",
                    "type": "string"
                }
            },
            "required": [
                "phoneNumber"
            ],
            "type": "object"
        },
        "Scenario": {
            "description": "A scenario",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ReferenceLink"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "id",
                "name",
                "description",
                "status"
            ],
            "type": "object"
        },
        "SenderOverrides": {
            "description": "Sender Overrides",
            "properties": {
                "callerId": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ServiceProvider": {
            "description": "A service provider",
            "properties": {
                "deviceType": {
                    "$ref": "#/definitions/DeviceType"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "id",
                "name"
            ]
        },
        "ServiceProviderPointer": {
            "description": "A reference to a provider resource",
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "Shift": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "group": {
                    "$ref": "#/definitions/GroupReference"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ReferenceLink"
                }
            }
        },
        "ShiftInput": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ]
        },
        "ShiftReference": {
            "properties": {
                "id": {
                    "description": "The identifier of the resource",
                    "type": "string"
                },
                "group": {
                    "$ref": "#/definitions/GroupReference"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ReferenceLink"
                }
            },
            "required": [
                "id",
                "name",
                "links"
            ]
        },
        "ShiftMember": {
            "properties": {
                "delay": {
                    "description": "How long, in minutes, to wait before notifying this team member",
                    "type": "integer"
                },
                "escalationType": {
                    "description": "Identifies the type of escalation to use for Performance Report metrics; can be one of None, Peer, or Management. Note that if the delay is set to 0, this field must be set to None, or omitted. This setting cannot be applied to the first recipient in a list",
                    "enum": [
                        "NONE",
                        "PEER",
                        "MANAGEMENT"
                    ],
                    "type": "string"
                },
                "inRotation": {
                    "description": "Indicates whether the team member is included in the rotation cycle",
                    "type": "boolean"
                },
                "position": {
                    "description": "Position in the rotation sequence",
                    "type": "integer"
                },
                "recipient": {
                    "$ref": "#/definitions/RecipientReference"
                },
                "shift": {
                    "$ref": "#/definitions/ShiftReference"
                }
            },
            "required": [
                "shift",
                "recipient",
                "position",
                "delay",
                "escalationType",
                "inRotation"
            ]
        },
        "ShiftMemberInput": {
            "properties": {
                "delay": {
                    "description": "How long, in minutes, to wait before notifying this team member",
                    "type": "integer"
                },
                "escalationType": {
                    "description": "Identifies the type of escalation to use for Performance Report metrics; can be one of None, Peer, or Management. Note that if the delay is set to 0, this field must be set to None, or omitted. This setting cannot be applied to the first recipient in a list",
                    "enum": [
                        "None",
                        "Peer",
                        "Management"
                    ],
                    "type": "string"
                },
                "inRotation": {
                    "description": "Indicates whether the team member is included in the rotation cycle",
                    "type": "boolean"
                },
                "position": {
                    "description": "Position in the rotation sequence",
                    "type": "integer"
                },
                "recipient": {
                    "$ref": "#/definitions/RecipientPointer"
                }
            },
            "required": [
                "recipient"
            ]
        },
        "ShiftOccurrence": {
            "properties": {
                "shift": {
                    "$ref": "#/definitions/ShiftReference"
                },
                "start": {
                    "format": "date-time",
                    "type": "string"
                },
                "end": {
                    "format": "date-time",
                    "type": "string"
                },
                "members": {
                    "$ref": "#/definitions/Pagination(ShiftOccurrenceMember)"
                }
            },
            "required": [
                "shift",
                "start",
                "end"
            ]
        },
        "ShiftOccurrenceMember": {
            "properties": {
                "delay": {
                    "type": "integer"
                },
                "member": {
                    "$ref": "#/definitions/Recipient"
                },
                "position": {
                    "type": "integer"
                },
                "replacements": {
                    "$ref": "#/definitions/Pagination(TemporaryReplacement)"
                }
            },
            "required": [
                "member",
                "position",
                "delay"
            ]
        },
        "Site": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Recipient"
                }
            ],
            "description": "Site a group belongs to",
            "properties": {
                "name": {
                    "type": "string"
                },
                "address1": {
                    "type": "string"
                },
                "address2": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "latitude": {
                    "format": "double",
                    "type": "number"
                },
                "longitude": {
                    "format": "double",
                    "type": "number"
                },
                "postalCode": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ReferenceLink"
                }
            },
            "required": [
                "id",
                "name"
            ]
        },
        "SitePointer": {
            "description": "Site a group belongs to",
            "properties": {
                "id": {
                    "description": "The identifier of the resource",
                    "type": "string"
                }
            }
        },
        "SiteReference": {
            "properties": {
                "id": {
                    "description": "The identifier of the resource",
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ReferenceLink"
                }
            },
            "required": [
                "id",
                "links"
            ]
        },
        "TemporaryReplacement": {
            "type": "object",
            "description": "object",
            "properties": {
                "start": {
                    "format": "date-time",
                    "type": "string"
                },
                "end": {
                    "format": "date-time",
                    "type": "string"
                },
                "member": {
                    "$ref": "#/definitions/PersonReference"
                },
                "replacement": {
                    "$ref": "#/definitions/PersonReference"
                }
            },
            "required": [
                "start",
                "end",
                "replacement"
            ]
        },
        "TextPagerDevice": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Device"
                }
            ],
            "properties": {
                "deviceType": {
                    "enum": [
                        "TEXT_PAGER"
                    ],
                    "type": "string"
                },
                "pin": {
                    "type": "string"
                },
                "twoWayDevice": {
                    "type": "boolean"
                }
            },
            "required": [
                "pin",
                "twoWayDevice"
            ]
        },
        "TextPagerDeviceInput": {
            "allOf": [
                {
                    "$ref": "#/definitions/DeviceInput"
                }
            ],
            "properties": {
                "deviceType": {
                    "enum": [
                        "TEXT_PAGER"
                    ],
                    "type": "string"
                },
                "pin": {
                    "type": "string"
                },
                "twoWayDevice": {
                    "type": "boolean"
                }
            },
            "required": [
                "pin",
                "twoWayDevice"
            ],
            "type": "object"
        },
        "UnauthorizedResponse": {
            "properties": {
                "code": {
                    "description": "An application-specific error code",
                    "format": "int32",
                    "type": "integer"
                },
                "message": {
                    "description": "A detailed description of the response or error",
                    "type": "string"
                },
                "reason": {
                    "description": "A description of the response code",
                    "enum": [
                        "Unauthorized"
                    ],
                    "type": "string"
                },
                "status": {
                    "description": "The HTTP status code",
                    "enum": [
                        401
                    ],
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "status",
                "reason",
                "message"
            ]
        },
        "VoiceDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/Device"
                }
            ],
            "properties": {
                "deviceType": {
                    "enum": [
                        "VOICE"
                    ],
                    "type": "string"
                },
                "phoneNumber": {
                    "description": "E.164 international format phone number including +, country code, and extension",
                    "type": "string"
                }
            },
            "required": [
                "phoneNumber"
            ],
            "type": "object"
        },
        "VoiceDeviceInput": {
            "allOf": [
                {
                    "$ref": "#/definitions/DeviceInput"
                }
            ],
            "properties": {
                "deviceType": {
                    "enum": [
                        "VOICE"
                    ],
                    "type": "string"
                },
                "phoneNumber": {
                    "description": "E.164 international format phone number including country code and extension",
                    "type": "string"
                }
            },
            "required": [
                "phoneNumber"
            ],
            "type": "object"
        },
        "VoicemailOptions": {
            "description": "Voicemail Options",
            "properties": {
                "every": {
                    "type": "integer"
                },
                "leave": {
                    "type": "string"
                },
                "retry": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ScheduleThisMessage": {
            "type": "object",
            "description": "schedule-this message",
            "properties": {
                "version": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1
                },
                "organization": {
                    "$ref": "#/definitions/OrganizationPointer"
                },
                "message": {
                    "type": "string",
                    "description": "JSON message to be emitted into topic. Must be appropriate for the destination topic schema",
                    "maxLength": 100000,
                    "minLength": 1
                },
                "topic": {
                    "type": "string",
                    "description": "Will emit message into this topic using organization.id as the partition key",
                    "maxLength": 32,
                    "minLength": 1
                },
                "trigger": {
                    "$ref": "#/definitions/ScheduleTrigger"
                }
            },
            "required": [
                "version",
                "organization",
                "message",
                "topic",
                "trigger"
            ]
        },
        "ScheduleTrigger": {
            "type": "object",
            "description": "Schedule Trigger",
            "properties": {
                "startTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The “startTime” property indicates when the trigger’s schedule first comes into affect. Defaults to now"
                },
                "endTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The “endTime” property indicates when the trigger’s schedule should no longer be in effect"
                },
                "cron": {
                    "type": "string",
                    "description": "Cron-Expression string made up of seven sub-expressions, that describe individual details of the schedule. These sub-expression are separated with white-space, and represent: Seconds Minutes Hours Day-of-Month Month Day-of-Week Year (optional field)"
                }
            },
            "required": [
                "startTime"
            ]
        },
        "Pagination(Audit)": {
            "properties": {
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/Audit"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                }
            },
            "required": [
                "data",
                "links"
            ]
        },
        "Pagination(Conference)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/Conference"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(Country)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/Country"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(Device)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/Device"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(DeviceName)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/DeviceName"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(DeviceTimeframe)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/DeviceTimeframe"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(DeviceType)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/DeviceType"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(Domain)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/Domain"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(Event)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/Event"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(FeatureToggle)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/FeatureToggle"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(Form)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/Form"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(Function)": {
            "required": [
                "count",
                "data",
                "total",
                "links"
            ],
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of items in this page of results (the number of items in the data array)"
                },
                "data": {
                    "type": "array",
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/Function"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total number of items in the result set"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                }
            }
        },
        "Pagination(Group)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/Group"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(GroupMember)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/GroupMember"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(IntegrationAgent)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/IntegrationAgent"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(IntegrationConfig)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/IntegrationConfig"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(Notification)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/Notification"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(OnCall)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/OnCall"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(Permission)": {
            "required": [
                "count",
                "data",
                "total",
                "links"
            ],
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of items in this page of results (the number of items in the data array)"
                },
                "data": {
                    "type": "array",
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/Permission"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total number of items in the result set"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                }
            }
        },
        "Pagination(Person)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/Person"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(Plan)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/Plan"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(PlanEndpoint)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/PlanEndpoint"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(Recipient)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/Recipient"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(RefreshToken)": {
            "required": [
                "count",
                "data",
                "total",
                "links"
            ],
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of items in this page of results (the number of items in the data array)"
                },
                "data": {
                    "type": "array",
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/RefreshToken"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total number of items in the result set"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                }
            }
        },
        "Pagination(Response)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/Response"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(ResponseOption)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/ResponseOption"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(Role)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/Role"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(RosterMember)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/RosterMember"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(Scenario)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/Scenario"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(ServiceProvider)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/ServiceProvider"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(Shift)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/Shift"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(ShiftMember)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/ShiftMember"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(ShiftOccurrence)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/ShiftOccurrence"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(ShiftOccurrenceMember)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/ShiftOccurrenceMember"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "Pagination(TemporaryReplacement)": {
            "properties": {
                "count": {
                    "description": "The number of items in this page of results (the number of items in the data array)",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "An array that contains this page of resources",
                    "items": {
                        "$ref": "#/definitions/TemporaryReplacement"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/PaginationLinks"
                },
                "total": {
                    "description": "The total number of items in the result set",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "data",
                "total",
                "links"
            ]
        },
        "PaginationLinks": {
            "properties": {
                "next": {
                    "description": "A link to the next page of results",
                    "type": "string"
                },
                "previous": {
                    "description": "A link to the previous page of results",
                    "type": "string"
                },
                "self": {
                    "description": "A link to this page of results",
                    "type": "string"
                }
            },
            "required": [
                "self"
            ]
        }
    },
    "parameters": {
        "path-conferenceId": {
            "description": "Conference identifier",
            "in": "path",
            "name": "conferenceId",
            "required": true,
            "type": "string"
        },
        "path-deepLinkToken": {
            "description": "Deep link token",
            "in": "path",
            "name": "deepLinkToken",
            "required": true,
            "type": "string"
        },
        "path-deviceId": {
            "description": "The device uuid or targetName",
            "in": "path",
            "name": "deviceId",
            "required": true,
            "type": "string"
        },
        "path-deviceType": {
            "description": "Device Type",
            "enum": [
                "ANDROID_PUSH",
                "APPLE_PUSH",
                "BLACKBERRY_PUSH",
                "BROWSER",
                "EMAIL",
                "FAX",
                "GENERIC",
                "IM",
                "NUMERIC_PAGER",
                "TEXT_PAGER",
                "TEXT_PHONE",
                "VOICE",
                "VOICE_IVR"
            ],
            "in": "path",
            "name": "deviceType",
            "required": true,
            "type": "string"
        },
        "path-eventId": {
            "description": "The event id",
            "in": "path",
            "name": "eventId",
            "required": true,
            "type": "string"
        },
        "path-endpointId": {
            "description": "The endpoint name",
            "in": "path",
            "name": "endpointId",
            "required": true,
            "type": "string"
        },
        "path-formId": {
            "description": "The form uuid or name",
            "in": "path",
            "name": "formId",
            "required": true,
            "type": "string"
        },
        "path-groupId": {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string"
        },
        "path-integrationAgentId": {
            "description": "Integration Agent ID",
            "in": "path",
            "name": "integrationAgentId",
            "required": true,
            "type": "string"
        },
        "path-memberId": {
            "description": "The recipient's uuid or targetName",
            "in": "path",
            "name": "memberId",
            "required": true,
            "type": "string"
        },
        "path-personId": {
            "description": "The person's uuid or targetName",
            "in": "path",
            "name": "personId",
            "required": true,
            "type": "string"
        },
        "path-planId": {
            "description": "The plan uuid or name",
            "in": "path",
            "name": "planId",
            "required": true,
            "type": "string"
        },
        "path-shiftId": {
            "description": "The uuid or name of the shift. e.g. 24/7 (Must be URL encoded)",
            "in": "path",
            "name": "shiftId",
            "required": true,
            "type": "string"
        },
        "path-occurrenceId": {
            "description": "The uuid, or start time, or sequence number of the shift occurrence",
            "in": "path",
            "name": "occurrenceId",
            "required": true,
            "type": "string"
        },
        "path-siteId": {
            "description": "The site uuid or name",
            "in": "path",
            "name": "siteId",
            "required": true,
            "type": "string"
        },
        "path-tokenId": {
            "name": "tokenId",
            "in": "path",
            "description": "Token name",
            "required": true,
            "type": "string"
        },
        "query-after": {
            "description": "After this time or sequenced item identifier (exclusive)",
            "in": "query",
            "name": "after",
            "required": false,
            "type": "string"
        },
        "query-at": {
            "description": "At this time",
            "format": "date-time",
            "in": "query",
            "name": "at",
            "required": false,
            "type": "string"
        },
        "query-before": {
            "description": "Before this time or sequenced item identifier (exclusive)",
            "in": "query",
            "name": "before",
            "required": false,
            "type": "string"
        },
        "query-deviceType": {
            "description": "Device type",
            "enum": [
                "ANDROID_PUSH",
                "APPLE_PUSH",
                "BLACKBERRY_PUSH",
                "BROWSER",
                "EMAIL",
                "FAX",
                "GENERIC",
                "IM",
                "NUMERIC_PAGER",
                "TEXT_PAGER",
                "TEXT_PHONE",
                "VOICE",
                "VOICE_IVR"
            ],
            "in": "query",
            "name": "deviceType",
            "required": false,
            "type": "string"
        },
        "query-deviceName": {
            "description": "Device name",
            "in": "query",
            "name": "deviceName",
            "required": false,
            "type": "string"
        },
        "query-embed": {
            "description": "Comma separated list of linked domain entities to embed in the response",
            "in": "query",
            "name": "embed",
            "required": false,
            "type": "string"
        },
        "query-formId": {
            "description": "The form uuid or name",
            "in": "query",
            "name": "formId",
            "required": false,
            "type": "string"
        },
        "query-from": {
            "description": "After this time or sequenced item identifier (inclusive)",
            "in": "query",
            "name": "from",
            "required": false,
            "type": "string"
        },
        "query-groupId": {
            "description": "The group's uuid or targetName",
            "in": "query",
            "name": "groupId",
            "required": false,
            "type": "string"
        },
        "query-groups": {
            "description": "Comma separated list of group uuid or targetName",
            "in": "query",
            "name": "groups",
            "required": false,
            "type": "array",
            "items": {
                "type": "string"
            },
            "collectionFormat": "csv"
        },
        "query-integrationId": {
            "description": "The integration id",
            "in": "query",
            "name": "integrationId",
            "required": false,
            "type": "string"
        },
        "query-limit": {
            "default": 100,
            "description": "Maximum result size to return",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer"
        },
        "query-offset": {
            "default": 0,
            "description": "Skip this many results before returning the result set",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
        },
        "query-personId": {
            "description": "The person's uuid or targetName",
            "in": "query",
            "name": "personId",
            "required": false,
            "type": "string"
        },
        "query-planId": {
            "description": "The plan uuid or name",
            "in": "query",
            "name": "planId",
            "required": false,
            "type": "string"
        },
        "query-requestId": {
            "description": "Request identifier",
            "in": "query",
            "name": "requestId",
            "required": false,
            "type": "string"
        },
        "query-status": {
            "description": "Event status",
            "enum": [
                "ACTIVE",
                "SUSPENDED",
                "TERMINATED"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
        },
        "query-submitterId": {
            "description": "The id or targetName of the submitter",
            "in": "query",
            "name": "submitterId",
            "required": false,
            "type": "string"
        },
        "query-to": {
            "description": "Before this time or sequenced item identifier (inclusive)",
            "in": "query",
            "name": "to",
            "required": false,
            "type": "string"
        },
        "query-used": {
            "description": "is used",
            "in": "query",
            "name": "used",
            "required": false,
            "type": "boolean"
        },
        "query-personIdMatch": {
            "type": "string",
            "description": "Determines the attribute used to match the personId",
            "in": "query",
            "name": "personIdMatch",
            "required": false,
            "enum": [
                "id",
                "targetName",
                "webLogin"
            ]
        },
        "query-propertyName": {
            "description": "Embedded property name",
            "in": "query",
            "name": "propertyName",
            "required": false,
            "type": "string"
        },
        "query-propertyValue": {
            "description": "Embedded property value",
            "in": "query",
            "name": "propertyValue",
            "required": false,
            "type": "string"
        },
        "query-role": {
            "type": "string",
            "description": "Has role",
            "in": "query",
            "name": "role",
            "required": false
        },
        "query-webLogin": {
            "type": "string",
            "description": "Has webLogin",
            "in": "query",
            "name": "webLogin",
            "required": false
        }
    },
    "responses": {
        "204": {
            "description": "No Content"
        },
        "400": {
            "description": "Bad Request - The request is malformed",
            "schema": {
                "$ref": "#/definitions/BadRequestResponse"
            }
        },
        "401": {
            "description": "Unauthorized - The action cannot be performed in the system",
            "schema": {
                "$ref": "#/definitions/UnauthorizedResponse"
            }
        },
        "403": {
            "description": "Forbidden - The authenticated user does not have permission to perform this action",
            "schema": {
                "$ref": "#/definitions/ForbiddenResponse"
            }
        },
        "404": {
            "description": "Not Found - The resource does not exist",
            "schema": {
                "$ref": "#/definitions/NotFoundResponse"
            }
        },
        "409": {
            "description": "Conflict - The action cannot be performed in the system",
            "schema": {
                "$ref": "#/definitions/ConflictResponse"
            }
        }
    }
}
